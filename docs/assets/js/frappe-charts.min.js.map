{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/constants.js","../../../src/js/utils/helpers.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/colors.js","../../../src/js/utils/draw.js","../../../src/js/utils/animate.js","../../../src/js/utils/animation.js","../../../src/js/utils/export.js","../../../src/js/utils/date-utils.js","../../../src/js/objects/ChartComponents.js","../../../src/js/utils/intervals.js","../../../src/js/utils/axis-chart-utils.js","../../../src/js/chart.js","../../../node_modules/style-inject/dist/style-inject.es.js","../../../src/js/objects/SvgTip.js","../../../src/css/chartsCss.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AggregationChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/DonutChart.js","../../../src/js/index.js"],"sourcesContent":["export function $(expr, con) {\r\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\r\n}\r\n\r\nexport function findNodeIndex(node)\r\n{\r\n\tvar i = 0;\r\n\twhile (node.previousSibling) {\r\n\t\tnode = node.previousSibling;\r\n\t\ti++;\r\n\t}\r\n\treturn i;\r\n}\r\n\r\n$.create = (tag, o) => {\r\n\tvar element = document.createElement(tag);\r\n\r\n\tfor (var i in o) {\r\n\t\tvar val = o[i];\r\n\r\n\t\tif (i === \"inside\") {\r\n\t\t\t$(val).appendChild(element);\r\n\t\t}\r\n\t\telse if (i === \"around\") {\r\n\t\t\tvar ref = $(val);\r\n\t\t\tref.parentNode.insertBefore(element, ref);\r\n\t\t\telement.appendChild(ref);\r\n\r\n\t\t} else if (i === \"styles\") {\r\n\t\t\tif(typeof val === \"object\") {\r\n\t\t\t\tObject.keys(val).map(prop => {\r\n\t\t\t\t\telement.style[prop] = val[prop];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (i in element ) {\r\n\t\t\telement[i] = val;\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.setAttribute(i, val);\r\n\t\t}\r\n\t}\r\n\r\n\treturn element;\r\n};\r\n\r\nexport function getOffset(element) {\r\n\tlet rect = element.getBoundingClientRect();\r\n\treturn {\r\n\t\t// https://stackoverflow.com/a/7436602/6495043\r\n\t\t// rect.top varies with scroll, so we add whatever has been\r\n\t\t// scrolled to it to get absolute distance from actual page top\r\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\r\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\r\n\t};\r\n}\r\n\r\nexport function isElementInViewport(el) {\r\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\r\n\tvar rect = el.getBoundingClientRect();\r\n\r\n\treturn (\r\n\t\trect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\r\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\r\n\t);\r\n}\r\n\r\nexport function getElementContentWidth(element) {\r\n\tvar styles = window.getComputedStyle(element);\r\n\tvar padding = parseFloat(styles.paddingLeft) +\r\n\t\tparseFloat(styles.paddingRight);\r\n\r\n\treturn element.clientWidth - padding;\r\n}\r\n\r\nexport function bind(element, o){\r\n\tif (element) {\r\n\t\tfor (var event in o) {\r\n\t\t\tvar callback = o[event];\r\n\r\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\r\n\t\t\t\telement.addEventListener(event, callback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function unbind(element, o){\r\n\tif (element) {\r\n\t\tfor (var event in o) {\r\n\t\t\tvar callback = o[event];\r\n\r\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\r\n\t\t\t\telement.removeEventListener(event, callback);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function fire(target, type, properties) {\r\n\tvar evt = document.createEvent(\"HTMLEvents\");\r\n\r\n\tevt.initEvent(type, true, true );\r\n\r\n\tfor (var j in properties) {\r\n\t\tevt[j] = properties[j];\r\n\t}\r\n\r\n\treturn target.dispatchEvent(evt);\r\n}\r\n\r\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\r\nexport function forEachNode(nodeList, callback, scope) {\r\n\tif(!nodeList) return;\r\n\tfor (var i = 0; i < nodeList.length; i++) {\r\n\t\tcallback.call(scope, nodeList[i], i);\r\n\t}\r\n}\r\n\r\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\r\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\r\n\r\n\tforEachNode($children, (node, i) => {\r\n\t\tif(index >= 0 && i <= index) return;\r\n\t\tnode.classList.remove(activeClass);\r\n\t});\r\n\r\n\t$child.classList.add(activeClass);\r\n}\r\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\r\n\r\nexport const COMPATIBLE_CHARTS = {\r\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\r\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\r\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\r\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\r\n\theatmap: []\r\n};\r\n\r\nexport const DATA_COLOR_DIVISIONS = {\r\n\tbar: 'datasets',\r\n\tline: 'datasets',\r\n\tpie: 'labels',\r\n\tpercentage: 'labels',\r\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\r\n};\r\n\r\nexport const BASE_MEASURES = {\r\n\tmargins: {\r\n\t\ttop: 10,\r\n\t\tbottom: 10,\r\n\t\tleft: 20,\r\n\t\tright: 20\r\n\t},\r\n\tpaddings: {\r\n\t\ttop: 20,\r\n\t\tbottom: 40,\r\n\t\tleft: 30,\r\n\t\tright: 10\r\n\t},\r\n\r\n\tbaseHeight: 240,\r\n\ttitleHeight: 20,\r\n\tlegendHeight: 30,\r\n\r\n\ttitleFontSize: 12,\r\n};\r\n\r\nexport function getTopOffset(m) {\r\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\r\n}\r\n\r\nexport function getLeftOffset(m) {\r\n\treturn m.margins.left + m.paddings.left;\r\n}\r\n\r\nexport function getExtraHeight(m) {\r\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\r\n\t\t+ m.paddings.top + m.paddings.bottom\r\n\t\t+ m.titleHeight + m.legendHeight;\r\n\treturn totalExtraHeight;\r\n}\r\n\r\nexport function getExtraWidth(m) {\r\n\tlet totalExtraWidth = m.margins.left + m.margins.right\r\n\t\t+ m.paddings.left + m.paddings.right;\r\n\r\n\treturn totalExtraWidth;\r\n}\r\n\r\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\r\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\r\n\r\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\r\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\r\n\r\nexport const AXIS_LEGEND_BAR_SIZE = 100;\r\n\r\nexport const BAR_CHART_SPACE_RATIO = 0.5;\r\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\r\n\r\nexport const LINE_CHART_DOT_SIZE = 4;\r\nexport const DOT_OVERLAY_SIZE_INCR = 4;\r\n\r\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\r\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\r\n\r\n// Fixed 5-color theme,\r\n// More colors are difficult to parse visually\r\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\r\n\r\nexport const HEATMAP_SQUARE_SIZE = 10;\r\nexport const HEATMAP_GUTTER_SIZE = 2;\r\n\r\nexport const DEFAULT_CHAR_WIDTH = 7;\r\n\r\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\r\n\r\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\r\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey', 'deep-yellow'];\r\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\r\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\r\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\r\n\r\nexport const DEFAULT_COLORS = {\r\n\tbar: DEFAULT_CHART_COLORS,\r\n\tline: DEFAULT_CHART_COLORS,\r\n\tpie: DEFAULT_CHART_COLORS,\r\n\tpercentage: DEFAULT_CHART_COLORS,\r\n\theatmap: HEATMAP_COLORS_GREEN,\r\n\tdonut: DEFAULT_CHART_COLORS\r\n};\r\n\r\n// Universal constants\r\nexport const ANGLE_RATIO = Math.PI / 180;\r\nexport const FULL_ANGLE = 360;\r\n","import { ANGLE_RATIO } from './constants';\r\n\r\n/**\r\n * Returns the value of a number upto 2 decimal places.\r\n * @param {Number} d Any number\r\n */\r\nexport function floatTwo(d) {\r\n\treturn parseFloat(d.toFixed(2));\r\n}\r\n\r\n/**\r\n * Returns whether or not two given arrays are equal.\r\n * @param {Array} arr1 First array\r\n * @param {Array} arr2 Second array\r\n */\r\nexport function arraysEqual(arr1, arr2) {\r\n\tif(arr1.length !== arr2.length) return false;\r\n\tlet areEqual = true;\r\n\tarr1.map((d, i) => {\r\n\t\tif(arr2[i] !== d) areEqual = false;\r\n\t});\r\n\treturn areEqual;\r\n}\r\n\r\n/**\r\n * Shuffles array in place. ES6 version\r\n * @param {Array} array An array containing the items.\r\n */\r\nexport function shuffle(array) {\r\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\r\n\t// https://stackoverflow.com/a/2450976/6495043\r\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\r\n\r\n\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\tlet j = Math.floor(Math.random() * (i + 1));\r\n\t\t[array[i], array[j]] = [array[j], array[i]];\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Fill an array with extra points\r\n * @param {Array} array Array\r\n * @param {Number} count number of filler elements\r\n * @param {Object} element element to fill with\r\n * @param {Boolean} start fill at start?\r\n */\r\nexport function fillArray(array, count, element, start=false) {\r\n\tif(!element) {\r\n\t\telement = start ? array[0] : array[array.length - 1];\r\n\t}\r\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\r\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Returns pixel width of string.\r\n * @param {String} string\r\n * @param {Number} charWidth Width of single char in pixels\r\n */\r\nexport function getStringWidth(string, charWidth) {\r\n\treturn (string+\"\").length * charWidth;\r\n}\r\n\r\nexport function bindChange(obj, getFn, setFn) {\r\n\treturn new Proxy(obj, {\r\n\t\tset: function(target, prop, value) {\r\n\t\t\tsetFn();\r\n\t\t\treturn Reflect.set(target, prop, value);\r\n\t\t},\r\n\t\tget: function(target, prop) {\r\n\t\t\tgetFn();\r\n\t\t\treturn Reflect.get(target, prop);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// https://stackoverflow.com/a/29325222\r\nexport function getRandomBias(min, max, bias, influence) {\r\n\tconst range = max - min;\r\n\tconst biasValue = range * bias + min;\r\n\tvar rnd = Math.random() * range + min,\t\t// random in range\r\n\t\tmix = Math.random() * influence;\t\t// random mixer\r\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\r\n}\r\n\r\nexport function getPositionByAngle(angle, radius) {\r\n\treturn {\r\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\r\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\r\n\t};\r\n}\r\n","import { fillArray } from './helpers';\r\n\r\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\r\n\tlet height, y;\r\n\tif (yTop <= zeroLine) {\r\n\t\theight = zeroLine - yTop;\r\n\t\ty = yTop;\r\n\t} else {\r\n\t\theight = yTop - zeroLine;\r\n\t\ty = zeroLine;\r\n\t}\r\n\r\n\treturn [height, y];\r\n}\r\n\r\nexport function equilizeNoOfElements(array1, array2,\r\n\textraCount = array2.length - array1.length) {\r\n\r\n\t// Doesn't work if either has zero elements.\r\n\tif(extraCount > 0) {\r\n\t\tarray1 = fillArray(array1, extraCount);\r\n\t} else {\r\n\t\tarray2 = fillArray(array2, extraCount);\r\n\t}\r\n\treturn [array1, array2];\r\n}\r\n\r\nexport function truncateString(txt, len) {\r\n\tif (!txt) {\r\n\t\treturn;\r\n\t}\r\n\tif (txt.length > len) {\r\n\t\treturn txt.slice(0, len-3) + '...';\r\n\t} else {\r\n\t\treturn txt;\r\n\t}\r\n}\r\n\r\nexport function shortenLargeNumber(label) {\r\n\tlet number;\r\n\tif (typeof label === 'number') number = label;\r\n\telse if (typeof label === 'string') {\r\n\t\tnumber = Number(label);\r\n\t\tif (Number.isNaN(number)) return label;\r\n\t}\r\n\r\n\t// Using absolute since log wont work for negative numbers\r\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\r\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\r\n\tlet\tl = Math.floor(p / 3);\r\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\r\n\r\n\t// Correct for floating point error upto 2 decimal places\r\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\r\n}\r\n\r\n// cubic bezier curve calculation (from example by François Romain)\r\nexport function getSplineCurvePointsStr(xList, yList) {\r\n\r\n\tlet points=[];\r\n\tfor(let i=0;i<xList.length;i++){\r\n\t\tpoints.push([xList[i], yList[i]]);\r\n\t}\r\n\r\n\tlet smoothing = 0.2;\r\n\tlet line = (pointA, pointB) => {\r\n\t\tlet lengthX = pointB[0] - pointA[0];\r\n\t\tlet lengthY = pointB[1] - pointA[1];\r\n\t\treturn {\r\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n\t\t\tangle: Math.atan2(lengthY, lengthX)\r\n\t\t};\r\n\t};\r\n    \r\n\tlet controlPoint = (current, previous, next, reverse) => {\r\n\t\tlet p = previous || current;\r\n\t\tlet n = next || current;\r\n\t\tlet o = line(p, n);\r\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\r\n\t\tlet length = o.length * smoothing;\r\n\t\tlet x = current[0] + Math.cos(angle) * length;\r\n\t\tlet y = current[1] + Math.sin(angle) * length;\r\n\t\treturn [x, y];\r\n\t};\r\n    \r\n\tlet bezierCommand = (point, i, a) => {\r\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\r\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\r\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\r\n\t};\r\n    \r\n\tlet pointStr = (points, command) => {\r\n\t\treturn points.reduce((acc, point, i, a) => i === 0\r\n\t\t\t? `${point[0]},${point[1]}`\r\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\r\n\t};\r\n    \r\n\treturn pointStr(points, bezierCommand);\r\n}\r\n","const PRESET_COLOR_MAP = {\r\n\t'light-blue': '#7cd6fd',\r\n\t'blue': '#5e64ff',\r\n\t'violet': '#743ee2',\r\n\t'red': '#ff5858',\r\n\t'orange': '#ffa00a',\r\n\t'yellow': '#feef72',\r\n\t'green': '#28a745',\r\n\t'light-green': '#98d85b',\r\n\t'purple': '#b554ff',\r\n\t'magenta': '#ffa3ef',\r\n\t'black': '#36114C',\r\n\t'grey': '#bdd3e6',\r\n\t'light-grey': '#f0f4f7',\r\n    'dark-grey': '#b8c2cc',\r\n    'deep-yellow': '#ffc85a'\r\n};\r\n\r\nfunction limitColor(r){\r\n\tif (r > 255) return 255;\r\n\telse if (r < 0) return 0;\r\n\treturn r;\r\n}\r\n\r\nexport function lightenDarkenColor(color, amt) {\r\n\tlet col = getColor(color);\r\n\tlet usePound = false;\r\n\tif (col[0] == \"#\") {\r\n\t\tcol = col.slice(1);\r\n\t\tusePound = true;\r\n\t}\r\n\tlet num = parseInt(col,16);\r\n\tlet r = limitColor((num >> 16) + amt);\r\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\r\n\tlet g = limitColor((num & 0x0000FF) + amt);\r\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\nexport function isValidColor(string) {\r\n\t// https://stackoverflow.com/a/8027444/6495043\r\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\r\n}\r\n\r\nexport const getColor = (color) => {\r\n\treturn PRESET_COLOR_MAP[color] || color;\r\n};\r\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\r\nimport { getStringWidth } from './helpers';\r\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\r\nimport { lightenDarkenColor } from './colors';\r\n\r\nexport const AXIS_TICK_LENGTH = 6;\r\nconst LABEL_MARGIN = 4;\r\nconst LABEL_MAX_CHARS = 15;\r\nexport const FONT_SIZE = 10;\r\nconst BASE_LINE_COLOR = '#dadada';\r\nconst FONT_FILL = '#555b51';\r\n\r\nfunction $(expr, con) {\r\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, o) {\r\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\r\n\r\n\tfor (var i in o) {\r\n\t\tvar val = o[i];\r\n\r\n\t\tif (i === \"inside\") {\r\n\t\t\t$(val).appendChild(element);\r\n\t\t}\r\n\t\telse if (i === \"around\") {\r\n\t\t\tvar ref = $(val);\r\n\t\t\tref.parentNode.insertBefore(element, ref);\r\n\t\t\telement.appendChild(ref);\r\n\r\n\t\t} else if (i === \"styles\") {\r\n\t\t\tif(typeof val === \"object\") {\r\n\t\t\t\tObject.keys(val).map(prop => {\r\n\t\t\t\t\telement.style[prop] = val[prop];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(i === \"className\") { i = \"class\"; }\r\n\t\t\tif(i === \"innerHTML\") {\r\n\t\t\t\telement['textContent'] = val;\r\n\t\t\t} else {\r\n\t\t\t\telement.setAttribute(i, val);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn element;\r\n}\r\n\r\nfunction renderVerticalGradient(svgDefElem, gradientId) {\r\n\treturn createSVG('linearGradient', {\r\n\t\tinside: svgDefElem,\r\n\t\tid: gradientId,\r\n\t\tx1: 0,\r\n\t\tx2: 0,\r\n\t\ty1: 0,\r\n\t\ty2: 1\r\n\t});\r\n}\r\n\r\nfunction setGradientStop(gradElem, offset, color, opacity) {\r\n\treturn createSVG('stop', {\r\n\t\t'inside': gradElem,\r\n\t\t'style': `stop-color: ${color}`,\r\n\t\t'offset': offset,\r\n\t\t'stop-opacity': opacity\r\n\t});\r\n}\r\n\r\nexport function makeSVGContainer(parent, className, width, height) {\r\n\treturn createSVG('svg', {\r\n\t\tclassName: className,\r\n\t\tinside: parent,\r\n\t\twidth: width,\r\n\t\theight: height\r\n\t});\r\n}\r\n\r\nexport function makeSVGDefs(svgContainer) {\r\n\treturn createSVG('defs', {\r\n\t\tinside: svgContainer,\r\n\t});\r\n}\r\n\r\nexport function makeSVGGroup(className, transform='', parent=undefined) {\r\n\tlet args = {\r\n\t\tclassName: className,\r\n\t\ttransform: transform\r\n\t};\r\n\tif(parent) args.inside = parent;\r\n\treturn createSVG('g', args);\r\n}\r\n\r\nexport function wrapInSVGGroup(elements, className='') {\r\n\tlet g = createSVG('g', {\r\n\t\tclassName: className\r\n\t});\r\n\telements.forEach(e => g.appendChild(e));\r\n\treturn g;\r\n}\r\n\r\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\r\n\treturn createSVG('path', {\r\n\t\tclassName: className,\r\n\t\td: pathStr,\r\n\t\tstyles: {\r\n\t\t\tstroke: stroke,\r\n\t\t\tfill: fill,\r\n\t\t\t'stroke-width': strokeWidth\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\r\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\r\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\r\n\treturn `M${center.x} ${center.y}\r\n\t\tL${arcStartX} ${arcStartY}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${arcEndY} z`;\r\n}\r\n\r\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\r\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\r\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\r\n\treturn `M${center.x} ${center.y}\r\n\t\tL${arcStartX} ${arcStartY}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${midArc} z\r\n\t\tL${arcStartX} ${midArc}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${arcEndY} z`;\r\n}\r\n\r\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\r\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\r\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\r\n\r\n\treturn `M${arcStartX} ${arcStartY}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${arcEndY}`;\r\n}\r\n\r\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\r\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\r\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\r\n\r\n\treturn `M${arcStartX} ${arcStartY}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${midArc}\r\n\t\tM${arcStartX} ${midArc}\r\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\r\n\t\t${arcEndX} ${arcEndY}`;\r\n}\r\n\r\nexport function makeGradient(svgDefElem, color, lighter = false) {\r\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\r\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\r\n\tlet opacities = [1, 0.6, 0.2];\r\n\tif(lighter) {\r\n\t\topacities = [0.4, 0.2, 0];\r\n\t}\r\n\r\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\r\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\r\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\r\n\r\n\treturn gradientId;\r\n}\r\n\r\nexport function percentageBar(x, y, width, height,\r\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\r\n\r\n\tlet args = {\r\n\t\tclassName: 'percentage-bar',\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tfill: fill,\r\n\t\tstyles: {\r\n\t\t\t'stroke': lightenDarkenColor(fill, -25),\r\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\r\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\r\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\r\n\t\t\t'stroke-width': depth\r\n\t\t},\r\n\t};\r\n\r\n\treturn createSVG(\"rect\", args);\r\n}\r\n\r\nexport function heatSquare(className, x, y, size, fill='none', data={}) {\r\n\tlet args = {\r\n\t\tclassName: className,\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\twidth: size,\r\n\t\theight: size,\r\n\t\tfill: fill\r\n\t};\r\n\r\n\tObject.keys(data).map(key => {\r\n\t\targs[key] = data[key];\r\n\t});\r\n\r\n\treturn createSVG(\"rect\", args);\r\n}\r\n\r\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\r\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\r\n\r\n\tlet args = {\r\n\t\tclassName: 'legend-bar',\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: size,\r\n\t\theight: '2px',\r\n\t\tfill: fill\r\n\t};\r\n\tlet text = createSVG('text', {\r\n\t\tclassName: 'legend-dataset-text',\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE * 2) + 'px',\r\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tfill: FONT_FILL,\r\n\t\tinnerHTML: label\r\n\t});\r\n\r\n\tlet group = createSVG('g', {\r\n\t\ttransform: `translate(${x}, ${y})`\r\n\t});\r\n\tgroup.appendChild(createSVG(\"rect\", args));\r\n\tgroup.appendChild(text);\r\n\r\n\treturn group;\r\n}\r\n\r\nexport function legendDot(x, y, size, fill='none', label) {\r\n\tlet args = {\r\n\t\tclassName: 'legend-dot',\r\n\t\tcx: 0,\r\n\t\tcy: 0,\r\n\t\tr: size,\r\n\t\tfill: fill\r\n\t};\r\n\tlet text = createSVG('text', {\r\n\t\tclassName: 'legend-dataset-text',\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdx: (FONT_SIZE) + 'px',\r\n\t\tdy: (FONT_SIZE/3) + 'px',\r\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tfill: FONT_FILL,\r\n\t\tinnerHTML: label\r\n\t});\r\n\r\n\tlet group = createSVG('g', {\r\n\t\ttransform: `translate(${x}, ${y})`\r\n\t});\r\n\tgroup.appendChild(createSVG(\"circle\", args));\r\n\tgroup.appendChild(text);\r\n\r\n\treturn group;\r\n}\r\n\r\nexport function makeText(className, x, y, content, options = {}) {\r\n\tlet fontSize = options.fontSize || FONT_SIZE;\r\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\r\n\tlet fill = options.fill || FONT_FILL;\r\n\tlet textAnchor = options.textAnchor || 'start';\r\n\treturn createSVG('text', {\r\n\t\tclassName: className,\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\tdy: dy + 'px',\r\n\t\t'font-size': fontSize + 'px',\r\n\t\tfill: fill,\r\n\t\t'text-anchor': textAnchor,\r\n\t\tinnerHTML: content\r\n\t});\r\n}\r\n\r\nfunction makeVertLine(x, label, y1, y2, options={}) {\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tlet l = createSVG('line', {\r\n\t\tclassName: 'line-vertical ' + options.className,\r\n\t\tx1: 0,\r\n\t\tx2: 0,\r\n\t\ty1: y1,\r\n\t\ty2: y2,\r\n\t\tstyles: {\r\n\t\t\tstroke: options.stroke\r\n\t\t}\r\n\t});\r\n\r\n\tlet text = createSVG('text', {\r\n\t\tx: 0,\r\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\r\n\t\tdy: FONT_SIZE + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': 'middle',\r\n\t\tinnerHTML: label + \"\"\r\n\t});\r\n\r\n\tlet line = createSVG('g', {\r\n\t\ttransform: `translate(${ x }, 0)`\r\n\t});\r\n\r\n\tline.appendChild(l);\r\n\tline.appendChild(text);\r\n\r\n\treturn line;\r\n}\r\n\r\nfunction makeHoriLine(y, label, x1, x2, options={}) {\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tif(!options.lineType) options.lineType = '';\r\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\r\n\t\r\n\tlet className = 'line-horizontal ' + options.className +\r\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\r\n\r\n\tlet l = createSVG('line', {\r\n\t\tclassName: className,\r\n\t\tx1: x1,\r\n\t\tx2: x2,\r\n\t\ty1: 0,\r\n\t\ty2: 0,\r\n\t\tstyles: {\r\n\t\t\tstroke: options.stroke\r\n\t\t}\r\n\t});\r\n\r\n\tlet text = createSVG('text', {\r\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\r\n\t\tinnerHTML: label+\"\"\r\n\t});\r\n\r\n\tlet line = createSVG('g', {\r\n\t\ttransform: `translate(0, ${y})`,\r\n\t\t'stroke-opacity': 1\r\n\t});\r\n\r\n\tif(text === 0 || text === '0') {\r\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\r\n\t}\r\n\r\n\tline.appendChild(l);\r\n\tline.appendChild(text);\r\n\r\n\treturn line;\r\n}\r\n\r\nexport function yLine(y, label, width, options={}) {\r\n\tif(!options.pos) options.pos = 'left';\r\n\tif(!options.offset) options.offset = 0;\r\n\tif(!options.mode) options.mode = 'span';\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tif(!options.className) options.className = '';\r\n\r\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\r\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\r\n\r\n\tif(options.mode === 'tick' && options.pos === 'right') {\r\n\t\tx1 = width + AXIS_TICK_LENGTH;\r\n\t\tx2 = width;\r\n\t}\r\n\r\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\r\n\r\n\tx1 += options.offset;\r\n\tx2 += options.offset;\r\n\r\n\treturn makeHoriLine(y, label, x1, x2, {\r\n\t\tstroke: options.stroke,\r\n\t\tclassName: options.className,\r\n\t\tlineType: options.lineType,\r\n\t\tshortenNumbers: options.shortenNumbers\r\n\t});\r\n}\r\n\r\nexport function xLine(x, label, height, options={}) {\r\n\tif(!options.pos) options.pos = 'bottom';\r\n\tif(!options.offset) options.offset = 0;\r\n\tif(!options.mode) options.mode = 'span';\r\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\r\n\tif(!options.className) options.className = '';\r\n\r\n\t// Draw X axis line in span/tick mode with optional label\r\n\t//                        \ty2(span)\r\n\t// \t\t\t\t\t\t|\r\n\t// \t\t\t\t\t\t|\r\n\t//\t\t\t\tx line\t|\r\n\t//\t\t\t\t\t\t|\r\n\t// \t\t\t\t\t   \t|\r\n\t// ---------------------+-- y2(tick)\r\n\t//\t\t\t\t\t\t|\r\n\t//\t\t\t\t\t\t\ty1\r\n\r\n\tlet y1 = height + AXIS_TICK_LENGTH;\r\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\r\n\r\n\tif(options.mode === 'tick' && options.pos === 'top') {\r\n\t\t// top axis ticks\r\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\r\n\t\ty2 = 0;\r\n\t}\r\n\r\n\treturn makeVertLine(x, label, y1, y2, {\r\n\t\tstroke: options.stroke,\r\n\t\tclassName: options.className,\r\n\t\tlineType: options.lineType\r\n\t});\r\n}\r\n\r\nexport function yMarker(y, label, width, options={}) {\r\n\tif(!options.labelPos) options.labelPos = 'right';\r\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\r\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\r\n\r\n\tlet labelSvg = createSVG('text', {\r\n\t\tclassName: 'chart-label',\r\n\t\tx: x,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE / -2) + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tinnerHTML: label+\"\"\r\n\t});\r\n\r\n\tlet line = makeHoriLine(y, '', 0, width, {\r\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\r\n\t\tclassName: options.className || '',\r\n\t\tlineType: options.lineType\r\n\t});\r\n\r\n\tline.appendChild(labelSvg);\r\n\r\n\treturn line;\r\n}\r\n\r\nexport function yRegion(y1, y2, width, label, options={}) {\r\n\t// return a group\r\n\tlet height = y1 - y2;\r\n\r\n\tlet rect = createSVG('rect', {\r\n\t\tclassName: `bar mini`, // remove class\r\n\t\tstyles: {\r\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\r\n\t\t\tstroke: BASE_LINE_COLOR,\r\n\t\t\t'stroke-dasharray': `${width}, ${height}`\r\n\t\t},\r\n\t\t// 'data-point-index': index,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\twidth: width,\r\n\t\theight: height\r\n\t});\r\n\r\n\tif(!options.labelPos) options.labelPos = 'right';\r\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\r\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\r\n\r\n\tlet labelSvg = createSVG('text', {\r\n\t\tclassName: 'chart-label',\r\n\t\tx: x,\r\n\t\ty: 0,\r\n\t\tdy: (FONT_SIZE / -2) + 'px',\r\n\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t'text-anchor': 'start',\r\n\t\tinnerHTML: label+\"\"\r\n\t});\r\n\r\n\tlet region = createSVG('g', {\r\n\t\ttransform: `translate(0, ${y2})`\r\n\t});\r\n\r\n\tregion.appendChild(rect);\r\n\tregion.appendChild(labelSvg);\r\n\r\n\treturn region;\r\n}\r\n\r\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\r\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\r\n\ty -= offset;\r\n\r\n\tif(height === 0) {\r\n\t\theight = meta.minHeight;\r\n\t\ty -= meta.minHeight;\r\n\t}\r\n\r\n\tlet rect = createSVG('rect', {\r\n\t\tclassName: `bar mini`,\r\n\t\tstyle: `fill: ${color}`,\r\n\t\t'data-point-index': index,\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\twidth: width,\r\n\t\theight: height\r\n\t});\r\n\r\n\tlabel += \"\";\r\n\r\n\tif(!label && !label.length) {\r\n\t\treturn rect;\r\n\t} else {\r\n\t\trect.setAttribute('y', 0);\r\n\t\trect.setAttribute('x', 0);\r\n\t\tlet text = createSVG('text', {\r\n\t\t\tclassName: 'data-point-value',\r\n\t\t\tx: width/2,\r\n\t\t\ty: 0,\r\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\r\n\t\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t\t'text-anchor': 'middle',\r\n\t\t\tinnerHTML: label\r\n\t\t});\r\n\r\n\t\tlet group = createSVG('g', {\r\n\t\t\t'data-point-index': index,\r\n\t\t\ttransform: `translate(${x}, ${y})`\r\n\t\t});\r\n\t\tgroup.appendChild(rect);\r\n\t\tgroup.appendChild(text);\r\n\r\n\t\treturn group;\r\n\t}\r\n}\r\n\r\nexport function datasetDot(x, y, radius, color, label='', index=0) {\r\n\tlet dot = createSVG('circle', {\r\n\t\tstyle: `fill: ${color}`,\r\n\t\t'data-point-index': index,\r\n\t\tcx: x,\r\n\t\tcy: y,\r\n\t\tr: radius\r\n\t});\r\n\r\n\tlabel += \"\";\r\n\r\n\tif(!label && !label.length) {\r\n\t\treturn dot;\r\n\t} else {\r\n\t\tdot.setAttribute('cy', 0);\r\n\t\tdot.setAttribute('cx', 0);\r\n\r\n\t\tlet text = createSVG('text', {\r\n\t\t\tclassName: 'data-point-value',\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\r\n\t\t\t'font-size': FONT_SIZE + 'px',\r\n\t\t\t'text-anchor': 'middle',\r\n\t\t\tinnerHTML: label\r\n\t\t});\r\n\r\n\t\tlet group = createSVG('g', {\r\n\t\t\t'data-point-index': index,\r\n\t\t\ttransform: `translate(${x}, ${y})`\r\n\t\t});\r\n\t\tgroup.appendChild(dot);\r\n\t\tgroup.appendChild(text);\r\n\r\n\t\treturn group;\r\n\t}\r\n}\r\n\r\nexport function getPaths(xList, yList, color, options={}, meta={}) {\r\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\r\n\tlet pointsStr = pointsList.join(\"L\");\r\n\r\n\t// Spline\r\n\tif (options.spline)\r\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\r\n    \r\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\r\n\r\n\t// HeatLine\r\n\tif(options.heatline) {\r\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\r\n\t\tpath.style.stroke = `url(#${gradient_id})`;\r\n\t}\r\n\r\n\tlet paths = {\r\n\t\tpath: path\r\n\t};\r\n\r\n\t// Region\r\n\tif(options.regionFill) {\r\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\r\n\r\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\r\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\r\n\t}\r\n\r\n\treturn paths;\r\n}\r\n\r\nexport let makeOverlay = {\r\n\t'bar': (unit) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'rect') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet overlay = unit.cloneNode();\r\n\t\toverlay.style.fill = '#000000';\r\n\t\toverlay.style.opacity = '0.4';\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t\treturn overlay;\r\n\t},\r\n\r\n\t'dot': (unit) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet overlay = unit.cloneNode();\r\n\t\tlet radius = unit.getAttribute('r');\r\n\t\tlet fill = unit.getAttribute('fill');\r\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\r\n\t\toverlay.setAttribute('fill', fill);\r\n\t\toverlay.style.opacity = '0.6';\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t\treturn overlay;\r\n\t},\r\n\r\n\t'heat_square': (unit) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet overlay = unit.cloneNode();\r\n\t\tlet radius = unit.getAttribute('r');\r\n\t\tlet fill = unit.getAttribute('fill');\r\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\r\n\t\toverlay.setAttribute('fill', fill);\r\n\t\toverlay.style.opacity = '0.6';\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t\treturn overlay;\r\n\t}\r\n};\r\n\r\nexport let updateOverlay = {\r\n\t'bar': (unit, overlay) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'rect') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\r\n\t\tObject.values(unit.attributes)\r\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\r\n\t\t\t.map(attr => {\r\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\r\n\t\t\t});\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t},\r\n\r\n\t'dot': (unit, overlay) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet attributes = ['cx', 'cy'];\r\n\t\tObject.values(unit.attributes)\r\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\r\n\t\t\t.map(attr => {\r\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\r\n\t\t\t});\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t},\r\n\r\n\t'heat_square': (unit, overlay) => {\r\n\t\tlet transformValue;\r\n\t\tif(unit.nodeName !== 'circle') {\r\n\t\t\ttransformValue = unit.getAttribute('transform');\r\n\t\t\tunit = unit.childNodes[0];\r\n\t\t}\r\n\t\tlet attributes = ['cx', 'cy'];\r\n\t\tObject.values(unit.attributes)\r\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\r\n\t\t\t.map(attr => {\r\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\r\n\t\t\t});\r\n\r\n\t\tif(transformValue) {\r\n\t\t\toverlay.setAttribute('transform', transformValue);\r\n\t\t}\r\n\t},\r\n};\r\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\r\n\r\nexport const UNIT_ANIM_DUR = 350;\r\nexport const PATH_ANIM_DUR = 350;\r\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\r\nexport const REPLACE_ALL_NEW_DUR = 250;\r\n\r\nexport const STD_EASING = 'easein';\r\n\r\nexport function translate(unit, oldCoord, newCoord, duration) {\r\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\r\n\treturn [\r\n\t\tunit,\r\n\t\t{transform: newCoord.join(', ')},\r\n\t\tduration,\r\n\t\tSTD_EASING,\r\n\t\t\"translate\",\r\n\t\t{transform: old}\r\n\t];\r\n}\r\n\r\nexport function translateVertLine(xLine, newX, oldX) {\r\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\r\n}\r\n\r\nexport function translateHoriLine(yLine, newY, oldY) {\r\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\r\n}\r\n\r\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\r\n\tlet newHeight = newY1 - newY2;\r\n\tlet rect = rectGroup.childNodes[0];\r\n\tlet width = rect.getAttribute(\"width\");\r\n\tlet rectAnim = [\r\n\t\trect,\r\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\r\n\t\tMARKER_LINE_ANIM_DUR,\r\n\t\tSTD_EASING\r\n\t];\r\n\r\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\r\n\treturn [rectAnim, groupAnim];\r\n}\r\n\r\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\r\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\r\n\ty -= offset;\r\n\tif(bar.nodeName !== 'rect') {\r\n\t\tlet rect = bar.childNodes[0];\r\n\t\tlet rectAnim = [\r\n\t\t\trect,\r\n\t\t\t{width: width, height: height},\r\n\t\t\tUNIT_ANIM_DUR,\r\n\t\t\tSTD_EASING\r\n\t\t];\r\n\r\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\r\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\r\n\t\treturn [rectAnim, groupAnim];\r\n\t} else {\r\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\r\n\t}\r\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\r\n}\r\n\r\nexport function animateDot(dot, x, y) {\r\n\tif(dot.nodeName !== 'circle') {\r\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\r\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\r\n\t\treturn [groupAnim];\r\n\t} else {\r\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\r\n\t}\r\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\r\n}\r\n\r\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\r\n\tlet pathComponents = [];\r\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\r\n    \r\n\tif (spline)\r\n\t\tpointsStr = createSplineCurve(newXList, newYList);\r\n\r\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\r\n\tpathComponents.push(animPath);\r\n\r\n\tif(paths.region) {\r\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\r\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\r\n\r\n\t\tconst animRegion = [\r\n\t\t\tpaths.region,\r\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\r\n\t\t\tPATH_ANIM_DUR,\r\n\t\t\tSTD_EASING\r\n\t\t];\r\n\t\tpathComponents.push(animRegion);\r\n\t}\r\n\r\n\treturn pathComponents;\r\n}\r\n\r\nexport function animatePathStr(oldPath, pathStr) {\r\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\r\n}\r\n","// Leveraging SMIL Animations\r\n\r\nimport { REPLACE_ALL_NEW_DUR } from './animate';\r\n\r\nconst EASING = {\r\n\tease: \"0.25 0.1 0.25 1\",\r\n\tlinear: \"0 0 1 1\",\r\n\t// easein: \"0.42 0 1 1\",\r\n\teasein: \"0.1 0.8 0.2 1\",\r\n\teaseout: \"0 0 0.58 1\",\r\n\teaseinout: \"0.42 0 0.58 1\"\r\n};\r\n\r\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\r\n\r\n\tlet animElement = element.cloneNode(true);\r\n\tlet newElement = element.cloneNode(true);\r\n\r\n\tfor(var attributeName in props) {\r\n\t\tlet animateElement;\r\n\t\tif(attributeName === 'transform') {\r\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\r\n\t\t} else {\r\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\r\n\t\t}\r\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\r\n\t\tlet value = props[attributeName];\r\n\r\n\t\tlet animAttr = {\r\n\t\t\tattributeName: attributeName,\r\n\t\t\tfrom: currentValue,\r\n\t\t\tto: value,\r\n\t\t\tbegin: \"0s\",\r\n\t\t\tdur: dur/1000 + \"s\",\r\n\t\t\tvalues: currentValue + \";\" + value,\r\n\t\t\tkeySplines: EASING[easingType],\r\n\t\t\tkeyTimes: \"0;1\",\r\n\t\t\tcalcMode: \"spline\",\r\n\t\t\tfill: 'freeze'\r\n\t\t};\r\n\r\n\t\tif(type) {\r\n\t\t\tanimAttr[\"type\"] = type;\r\n\t\t}\r\n\r\n\t\tfor (var i in animAttr) {\r\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\r\n\t\t}\r\n\r\n\t\tanimElement.appendChild(animateElement);\r\n\r\n\t\tif(type) {\r\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\r\n\t\t} else {\r\n\t\t\tnewElement.setAttribute(attributeName, value);\r\n\t\t}\r\n\t}\r\n\r\n\treturn [animElement, newElement];\r\n}\r\n\r\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\r\n\telement.style.transform = style;\r\n\telement.style.webkitTransform = style;\r\n\telement.style.msTransform = style;\r\n\telement.style.mozTransform = style;\r\n\telement.style.oTransform = style;\r\n}\r\n\r\nfunction animateSVG(svgContainer, elements) {\r\n\tlet newElements = [];\r\n\tlet animElements = [];\r\n\r\n\telements.map(element => {\r\n\t\tlet unit = element[0];\r\n\t\tlet parent = unit.parentNode;\r\n\r\n\t\tlet animElement, newElement;\r\n\r\n\t\telement[0] = unit;\r\n\t\t[animElement, newElement] = animateSVGElement(...element);\r\n\r\n\t\tnewElements.push(newElement);\r\n\t\tanimElements.push([animElement, parent]);\r\n\r\n\t\tparent.replaceChild(animElement, unit);\r\n\t});\r\n\r\n\tlet animSvg = svgContainer.cloneNode(true);\r\n\r\n\tanimElements.map((animElement, i) => {\r\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\r\n\t\telements[i][0] = newElements[i];\r\n\t});\r\n\r\n\treturn animSvg;\r\n}\r\n\r\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\r\n\tif(elementsToAnimate.length === 0) return;\r\n\r\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\r\n\tif(svgElement.parentNode == parent) {\r\n\t\tparent.removeChild(svgElement);\r\n\t\tparent.appendChild(animSvgElement);\r\n\r\n\t}\r\n\r\n\t// Replace the new svgElement (data has already been replaced)\r\n\tsetTimeout(() => {\r\n\t\tif(animSvgElement.parentNode == parent) {\r\n\t\t\tparent.removeChild(animSvgElement);\r\n\t\t\tparent.appendChild(svgElement);\r\n\t\t}\r\n\t}, REPLACE_ALL_NEW_DUR);\r\n}\r\n","import { $ } from '../utils/dom';\r\nimport { CSSTEXT } from '../../css/chartsCss';\r\n\r\nexport function downloadFile(filename, data) {\r\n\tvar a = document.createElement('a');\r\n\ta.style = \"display: none\";\r\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\r\n\tvar url = window.URL.createObjectURL(blob);\r\n\ta.href = url;\r\n\ta.download = filename;\r\n\tdocument.body.appendChild(a);\r\n\ta.click();\r\n\tsetTimeout(function(){\r\n\t\tdocument.body.removeChild(a);\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t}, 300);\r\n}\r\n\r\nexport function prepareForExport(svg) {\r\n\tlet clone = svg.cloneNode(true);\r\n\tclone.classList.add('chart-container');\r\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\r\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\r\n\tlet styleEl = $.create('style', {\r\n\t\t'innerHTML': CSSTEXT\r\n\t});\r\n\tclone.insertBefore(styleEl, clone.firstChild);\r\n\r\n\tlet container = $.create('div');\r\n\tcontainer.appendChild(clone);\r\n\r\n\treturn container.innerHTML;\r\n}\r\n","// Playing around with dates\r\n\r\nexport const NO_OF_YEAR_MONTHS = 12;\r\nexport const NO_OF_DAYS_IN_WEEK = 7;\r\nexport const DAYS_IN_YEAR = 375;\r\nexport const NO_OF_MILLIS = 1000;\r\nexport const SEC_IN_DAY = 86400;\r\n\r\nexport const MONTH_NAMES = [\"January\", \"February\", \"March\", \"April\", \"May\",\r\n\t\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nexport const MONTH_NAMES_SHORT = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\nexport const DAY_NAMES_SHORT = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nexport const DAY_NAMES = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\r\n\t\"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n// https://stackoverflow.com/a/11252167/6495043\r\nfunction treatAsUtc(date) {\r\n\tlet result = new Date(date);\r\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\r\n\treturn result;\r\n}\r\n\r\nexport function getYyyyMmDd(date) {\r\n\tlet dd = date.getDate();\r\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\r\n\treturn [\r\n\t\tdate.getFullYear(),\r\n\t\t(mm>9 ? '' : '0') + mm,\r\n\t\t(dd>9 ? '' : '0') + dd\r\n\t].join('-');\r\n}\r\n\r\nexport function clone(date) {\r\n\treturn new Date(date.getTime());\r\n}\r\n\r\nexport function timestampSec(date) {\r\n\treturn date.getTime()/NO_OF_MILLIS;\r\n}\r\n\r\nexport function timestampToMidnight(timestamp, roundAhead = false) {\r\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\r\n\tif(roundAhead) {\r\n\t\treturn midnightTs + SEC_IN_DAY;\r\n\t}\r\n\treturn midnightTs;\r\n}\r\n\r\n// export function getMonthsBetween(startDate, endDate) {}\r\n\r\nexport function getWeeksBetween(startDate, endDate) {\r\n\tlet weekStartDate = setDayToSunday(startDate);\r\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\r\n}\r\n\r\nexport function getDaysBetween(startDate, endDate) {\r\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\r\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\r\n}\r\n\r\nexport function areInSameMonth(startDate, endDate) {\r\n\treturn startDate.getMonth() === endDate.getMonth()\r\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\r\n}\r\n\r\nexport function getMonthName(i, short=false) {\r\n\tlet monthName = MONTH_NAMES[i];\r\n\treturn short ? monthName.slice(0, 3) : monthName;\r\n}\r\n\r\nexport function getLastDateInMonth (month, year) {\r\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\r\n}\r\n\r\n// mutates\r\nexport function setDayToSunday(date) {\r\n\tlet newDate = clone(date);\r\n\tconst day = newDate.getDay();\r\n\tif(day !== 0) {\r\n\t\taddDays(newDate, (-1) * day);\r\n\t}\r\n\treturn newDate;\r\n}\r\n\r\n// mutates\r\nexport function addDays(date, numberOfDays) {\r\n\tdate.setDate(date.getDate() + numberOfDays);\r\n}\r\n","import { makeSVGGroup } from '../utils/draw';\r\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\r\nimport { equilizeNoOfElements } from '../utils/draw-utils';\r\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\r\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\r\nimport { getMonthName } from '../utils/date-utils';\r\n\r\nclass ChartComponent {\r\n\tconstructor({\r\n\t\tlayerClass = '',\r\n\t\tlayerTransform = '',\r\n\t\tconstants,\r\n\r\n\t\tgetData,\r\n\t\tmakeElements,\r\n\t\tanimateElements\r\n\t}) {\r\n\t\tthis.layerTransform = layerTransform;\r\n\t\tthis.constants = constants;\r\n\r\n\t\tthis.makeElements = makeElements;\r\n\t\tthis.getData = getData;\r\n\r\n\t\tthis.animateElements = animateElements;\r\n\r\n\t\tthis.store = [];\r\n\t\tthis.labels = [];\r\n\r\n\t\tthis.layerClass = layerClass;\r\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\r\n\t\t\t? this.layerClass() : this.layerClass;\r\n\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\trefresh(data) {\r\n\t\tthis.data = data || this.getData();\r\n\t}\r\n\r\n\tsetup(parent) {\r\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\r\n\t}\r\n\r\n\tmake() {\r\n\t\tthis.render(this.data);\r\n\t\tthis.oldData = this.data;\r\n\t}\r\n\r\n\trender(data) {\r\n\t\tthis.store = this.makeElements(data);\r\n\r\n\t\tthis.layer.textContent = '';\r\n\t\tthis.store.forEach(element => {\r\n\t\t\tthis.layer.appendChild(element);\r\n\t\t});\r\n\t\tthis.labels.forEach(element => {\r\n\t\t\tthis.layer.appendChild(element);\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(animate = true) {\r\n\t\tthis.refresh();\r\n\t\tlet animateElements = [];\r\n\t\tif(animate) {\r\n\t\t\tanimateElements = this.animateElements(this.data) || [];\r\n\t\t}\r\n\t\treturn animateElements;\r\n\t}\r\n}\r\n\r\nlet componentConfigs = {\r\n\tdonutSlices: {\r\n\t\tlayerClass: 'donut-slices',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.sliceStrings.map((s, i) => {\r\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\r\n\t\t\t\tslice.style.transition = 'transform .3s;';\r\n\t\t\t\treturn slice;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\r\n\t\t},\r\n\t},\r\n\tpieSlices: {\r\n\t\tlayerClass: 'pie-slices',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.sliceStrings.map((s, i) =>{\r\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\r\n\t\t\t\tslice.style.transition = 'transform .3s;';\r\n\t\t\t\treturn slice;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\treturn this.store.map((slice, i) =>\r\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\tpercentageBars: {\r\n\t\tlayerClass: 'percentage-bars',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.xPositions.map((x, i) =>{\r\n\t\t\t\tlet y = 0;\r\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\r\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\r\n\t\t\t\treturn bar;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tif(newData) return [];\r\n\t\t}\r\n\t},\r\n\tyAxis: {\r\n\t\tlayerClass: 'y axis',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.positions.map((position, i) =>\r\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\r\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newPos = newData.positions;\r\n\t\t\tlet newLabels = newData.labels;\r\n\t\t\tlet oldPos = this.oldData.positions;\r\n\t\t\tlet oldLabels = this.oldData.labels;\r\n\r\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\r\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\tpositions: oldPos,\r\n\t\t\t\tlabels: newLabels\r\n\t\t\t});\r\n\r\n\t\t\treturn this.store.map((line, i) => {\r\n\t\t\t\treturn translateHoriLine(\r\n\t\t\t\t\tline, newPos[i], oldPos[i]\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\txAxis: {\r\n\t\tlayerClass: 'x axis',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.positions.map((position, i) =>\r\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\r\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newPos = newData.positions;\r\n\t\t\tlet newLabels = newData.calcLabels;\r\n\t\t\tlet oldPos = this.oldData.positions;\r\n\t\t\tlet oldLabels = this.oldData.calcLabels;\r\n\r\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\r\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\tpositions: oldPos,\r\n\t\t\t\tcalcLabels: newLabels\r\n\t\t\t});\r\n\r\n\t\t\treturn this.store.map((line, i) => {\r\n\t\t\t\treturn translateVertLine(\r\n\t\t\t\t\tline, newPos[i], oldPos[i]\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tyMarkers: {\r\n\t\tlayerClass: 'y-markers',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.map(m =>\r\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\r\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\r\n\t\t\t);\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\r\n\r\n\t\t\tlet newPos = newData.map(d => d.position);\r\n\t\t\tlet newLabels = newData.map(d => d.label);\r\n\t\t\tlet newOptions = newData.map(d => d.options);\r\n\r\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\r\n\r\n\t\t\tthis.render(oldPos.map((pos, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tposition: oldPos[i],\r\n\t\t\t\t\tlabel: newLabels[i],\r\n\t\t\t\t\toptions: newOptions[i]\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\treturn this.store.map((line, i) => {\r\n\t\t\t\treturn translateHoriLine(\r\n\t\t\t\t\tline, newPos[i], oldPos[i]\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tyRegions: {\r\n\t\tlayerClass: 'y-regions',\r\n\t\tmakeElements(data) {\r\n\t\t\treturn data.map(r =>\r\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\r\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\r\n\t\t\t);\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\r\n\r\n\t\t\tlet newPos = newData.map(d => d.endPos);\r\n\t\t\tlet newLabels = newData.map(d => d.label);\r\n\t\t\tlet newStarts = newData.map(d => d.startPos);\r\n\t\t\tlet newOptions = newData.map(d => d.options);\r\n\r\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\r\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\r\n\r\n\t\t\tthis.render(oldPos.map((pos, i) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstartPos: oldStarts[i],\r\n\t\t\t\t\tendPos: oldPos[i],\r\n\t\t\t\t\tlabel: newLabels[i],\r\n\t\t\t\t\toptions: newOptions[i]\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\tlet animateElements = [];\r\n\r\n\t\t\tthis.store.map((rectGroup, i) => {\r\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\r\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\r\n\t\t\t\t));\r\n\t\t\t});\r\n\r\n\t\t\treturn animateElements;\r\n\t\t}\r\n\t},\r\n\r\n\theatDomain: {\r\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\r\n\t\tmakeElements(data) {\r\n\t\t\tlet {index, colWidth, rowHeight, squareSize, xTranslate} = this.constants;\r\n\t\t\tlet monthNameHeight = -12;\r\n\t\t\tlet x = xTranslate, y = 0;\r\n\r\n\t\t\tthis.serializedSubDomains = [];\r\n\r\n\t\t\tdata.cols.map((week, weekNo) => {\r\n\t\t\t\tif(weekNo === 1) {\r\n\t\t\t\t\tthis.labels.push(\r\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true).toUpperCase(),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfontSize: 9\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tweek.map((day, i) => {\r\n\t\t\t\t\tif(day.fill) {\r\n\t\t\t\t\t\tlet data = {\r\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\r\n\t\t\t\t\t\t\t'data-value': day.dataValue,\r\n\t\t\t\t\t\t\t'data-day': i\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, day.fill, data);\r\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ty += rowHeight;\r\n\t\t\t\t});\r\n\t\t\t\ty = 0;\r\n\t\t\t\tx += colWidth;\r\n\t\t\t});\r\n\r\n\t\t\treturn this.serializedSubDomains;\r\n\t\t},\r\n\r\n\t\tanimateElements(newData) {\r\n\t\t\tif(newData) return [];\r\n\t\t}\r\n\t},\r\n\r\n\tbarGraph: {\r\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\r\n\t\tmakeElements(data) {\r\n\t\t\tlet c = this.constants;\r\n\t\t\tthis.unitType = 'bar';\r\n\t\t\tthis.units = data.yPositions.map((y, j) => {\r\n\t\t\t\treturn datasetBar(\r\n\t\t\t\t\tdata.xPositions[j],\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tdata.barWidth,\r\n\t\t\t\t\tc.color,\r\n\t\t\t\t\tdata.labels[j],\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tdata.offsets[j],\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tzeroLine: data.zeroLine,\r\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\r\n\t\t\t\t\t\tminHeight: c.minHeight\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\treturn this.units;\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newXPos = newData.xPositions;\r\n\t\t\tlet newYPos = newData.yPositions;\r\n\t\t\tlet newOffsets = newData.offsets;\r\n\t\t\tlet newLabels = newData.labels;\r\n\r\n\t\t\tlet oldXPos = this.oldData.xPositions;\r\n\t\t\tlet oldYPos = this.oldData.yPositions;\r\n\t\t\tlet oldOffsets = this.oldData.offsets;\r\n\t\t\tlet oldLabels = this.oldData.labels;\r\n\r\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\r\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\r\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\r\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\txPositions: oldXPos,\r\n\t\t\t\tyPositions: oldYPos,\r\n\t\t\t\toffsets: oldOffsets,\r\n\t\t\t\tlabels: newLabels,\r\n\r\n\t\t\t\tzeroLine: this.oldData.zeroLine,\r\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\r\n\t\t\t\tbarWidth: this.oldData.barWidth,\r\n\t\t\t});\r\n\r\n\t\t\tlet animateElements = [];\r\n\r\n\t\t\tthis.store.map((bar, i) => {\r\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\r\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\r\n\t\t\t\t\t{zeroLine: newData.zeroLine}\r\n\t\t\t\t));\r\n\t\t\t});\r\n\r\n\t\t\treturn animateElements;\r\n\t\t}\r\n\t},\r\n\r\n\tlineGraph: {\r\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\r\n\t\tmakeElements(data) {\r\n\t\t\tlet c = this.constants;\r\n\t\t\tthis.unitType = 'dot';\r\n\t\t\tthis.paths = {};\r\n\t\t\tif(!c.hideLine) {\r\n\t\t\t\tthis.paths = getPaths(\r\n\t\t\t\t\tdata.xPositions,\r\n\t\t\t\t\tdata.yPositions,\r\n\t\t\t\t\tc.color,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\theatline: c.heatline,\r\n\t\t\t\t\t\tregionFill: c.regionFill,\r\n\t\t\t\t\t\tspline: c.spline\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\r\n\t\t\t\t\t\tzeroLine: data.zeroLine\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tthis.units = [];\r\n\t\t\tif(!c.hideDots) {\r\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\r\n\t\t\t\t\treturn datasetDot(\r\n\t\t\t\t\t\tdata.xPositions[j],\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\tc.color,\r\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\r\n\t\t\t\t\t\tj\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn Object.values(this.paths).concat(this.units);\r\n\t\t},\r\n\t\tanimateElements(newData) {\r\n\t\t\tlet newXPos = newData.xPositions;\r\n\t\t\tlet newYPos = newData.yPositions;\r\n\t\t\tlet newValues = newData.values;\r\n\r\n\t\t\tlet oldXPos = this.oldData.xPositions;\r\n\t\t\tlet oldYPos = this.oldData.yPositions;\r\n\t\t\tlet oldValues = this.oldData.values;\r\n\r\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\r\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\r\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\r\n\r\n\t\t\tthis.render({\r\n\t\t\t\txPositions: oldXPos,\r\n\t\t\t\tyPositions: oldYPos,\r\n\t\t\t\tvalues: newValues,\r\n\r\n\t\t\t\tzeroLine: this.oldData.zeroLine,\r\n\t\t\t\tradius: this.oldData.radius,\r\n\t\t\t});\r\n\r\n\t\t\tlet animateElements = [];\r\n\r\n\t\t\tif(Object.keys(this.paths).length) {\r\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\r\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\r\n\t\t\t}\r\n\r\n\t\t\tif(this.units.length) {\r\n\t\t\t\tthis.units.map((dot, i) => {\r\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\r\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn animateElements;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport function getComponent(name, constants, getData) {\r\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\r\n\tlet config = componentConfigs[keys[0]];\r\n\tObject.assign(config, {\r\n\t\tconstants: constants,\r\n\t\tgetData: getData\r\n\t});\r\n\treturn new ChartComponent(config);\r\n}\r\n","import { floatTwo } from './helpers';\r\n\r\nfunction normalize(x) {\r\n\t// Calculates mantissa and exponent of a number\r\n\t// Returns normalized number and exponent\r\n\t// https://stackoverflow.com/q/9383593/6495043\r\n\r\n\tif(x===0) {\r\n\t\treturn [0, 0];\r\n\t}\r\n\tif(isNaN(x)) {\r\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\r\n\t}\r\n\tvar sig = x > 0 ? 1 : -1;\r\n\tif(!isFinite(x)) {\r\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\r\n\t}\r\n\r\n\tx = Math.abs(x);\r\n\tvar exp = Math.floor(Math.log10(x));\r\n\tvar man = x/Math.pow(10, exp);\r\n\r\n\treturn [sig * man, exp];\r\n}\r\n\r\nfunction getChartRangeIntervals(max, min=0) {\r\n\tlet upperBound = Math.ceil(max);\r\n\tlet lowerBound = Math.floor(min);\r\n\tlet range = upperBound - lowerBound;\r\n\r\n\tlet noOfParts = range;\r\n\tlet partSize = 1;\r\n\r\n\t// To avoid too many partitions\r\n\tif(range > 5) {\r\n\t\tif(range % 2 !== 0) {\r\n\t\t\tupperBound++;\r\n\t\t\t// Recalc range\r\n\t\t\trange = upperBound - lowerBound;\r\n\t\t}\r\n\t\tnoOfParts = range/2;\r\n\t\tpartSize = 2;\r\n\t}\r\n\r\n\t// Special case: 1 and 2\r\n\tif(range <= 2) {\r\n\t\tnoOfParts = 4;\r\n\t\tpartSize = range/noOfParts;\r\n\t}\r\n\r\n\t// Special case: 0\r\n\tif(range === 0) {\r\n\t\tnoOfParts = 5;\r\n\t\tpartSize = 1;\r\n\t}\r\n\r\n\tlet intervals = [];\r\n\tfor(var i = 0; i <= noOfParts; i++){\r\n\t\tintervals.push(lowerBound + partSize * i);\r\n\t}\r\n\treturn intervals;\r\n}\r\n\r\nfunction getChartIntervals(maxValue, minValue=0) {\r\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\r\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\r\n\r\n\t// Allow only 7 significant digits\r\n\tnormalMaxValue = normalMaxValue.toFixed(6);\r\n\r\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\r\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\r\n\treturn intervals;\r\n}\r\n\r\nexport function calcChartIntervals(values, withMinimum=false) {\r\n\t//*** Where the magic happens ***\r\n\r\n\t// Calculates best-fit y intervals from given values\r\n\t// and returns the interval array\r\n\r\n\tlet maxValue = Math.max(...values);\r\n\tlet minValue = Math.min(...values);\r\n\r\n\t// Exponent to be used for pretty print\r\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\r\n\r\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\r\n\t\tlet intervals = getChartIntervals(maxValue);\r\n\r\n\t\tlet intervalSize = intervals[1] - intervals[0];\r\n\r\n\t\t// Then unshift the negative values\r\n\t\tlet value = 0;\r\n\t\tfor(var i = 1; value < absMinValue; i++) {\r\n\t\t\tvalue += intervalSize;\r\n\t\t\tintervals.unshift((-1) * value);\r\n\t\t}\r\n\t\treturn intervals;\r\n\t}\r\n\r\n\t// CASE I: Both non-negative\r\n\r\n\tif(maxValue >= 0 && minValue >= 0) {\r\n\t\texponent = normalize(maxValue)[1];\r\n\t\tif(!withMinimum) {\r\n\t\t\tintervals = getChartIntervals(maxValue);\r\n\t\t} else {\r\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\r\n\t\t}\r\n\t}\r\n\r\n\t// CASE II: Only minValue negative\r\n\r\n\telse if(maxValue > 0 && minValue < 0) {\r\n\t\t// `withMinimum` irrelevant in this case,\r\n\t\t// We'll be handling both sides of zero separately\r\n\t\t// (both starting from zero)\r\n\t\t// Because ceil() and floor() behave differently\r\n\t\t// in those two regions\r\n\r\n\t\tlet absMinValue = Math.abs(minValue);\r\n\r\n\t\tif(maxValue >= absMinValue) {\r\n\t\t\texponent = normalize(maxValue)[1];\r\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\r\n\t\t} else {\r\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\r\n\t\t\texponent = normalize(absMinValue)[1];\r\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\r\n\t\t\tintervals = posIntervals.map(d => d * (-1));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// CASE III: Both non-positive\r\n\r\n\telse if(maxValue <= 0 && minValue <= 0) {\r\n\t\t// Mirrored Case I:\r\n\t\t// Work with positives, then reverse the sign and array\r\n\r\n\t\tlet pseudoMaxValue = Math.abs(minValue);\r\n\t\tlet pseudoMinValue = Math.abs(maxValue);\r\n\r\n\t\texponent = normalize(pseudoMaxValue)[1];\r\n\t\tif(!withMinimum) {\r\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\r\n\t\t} else {\r\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\r\n\t\t}\r\n\r\n\t\tintervals = intervals.reverse().map(d => d * (-1));\r\n\t}\r\n\r\n\treturn intervals;\r\n}\r\n\r\nexport function getZeroIndex(yPts) {\r\n\tlet zeroIndex;\r\n\tlet interval = getIntervalSize(yPts);\r\n\tif(yPts.indexOf(0) >= 0) {\r\n\t\t// the range has a given zero\r\n\t\t// zero-line on the chart\r\n\t\tzeroIndex = yPts.indexOf(0);\r\n\t} else if(yPts[0] > 0) {\r\n\t\t// Minimum value is positive\r\n\t\t// zero-line is off the chart: below\r\n\t\tlet min = yPts[0];\r\n\t\tzeroIndex = (-1) * min / interval;\r\n\t} else {\r\n\t\t// Maximum value is negative\r\n\t\t// zero-line is off the chart: above\r\n\t\tlet max = yPts[yPts.length - 1];\r\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\r\n\t}\r\n\treturn zeroIndex;\r\n}\r\n\r\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\r\n\tlet range = max - min;\r\n\tlet part = range * 1.0 / noOfIntervals;\r\n\tlet intervals = [];\r\n\r\n\tfor(var i = 0; i <= noOfIntervals; i++) {\r\n\t\tintervals.push(min + part * i);\r\n\t}\r\n\r\n\treturn asc ? intervals : intervals.reverse();\r\n}\r\n\r\nexport function getIntervalSize(orderedArray) {\r\n\treturn orderedArray[1] - orderedArray[0];\r\n}\r\n\r\nexport function getValueRange(orderedArray) {\r\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\r\n}\r\n\r\nexport function scale(val, yAxis) {\r\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\r\n}\r\n\r\nexport function isInRange(val, min, max) {\r\n\treturn val > min && val < max;\r\n}\r\n\r\nexport function isInRange2D(coord, minCoord, maxCoord) {\r\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\r\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\r\n}\r\n\r\nexport function getClosestInArray(goal, arr, index = false) {\r\n\tlet closest = arr.reduce(function(prev, curr) {\r\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\r\n\t}, []);\r\n\r\n\treturn index ? arr.indexOf(closest) : closest;\r\n}\r\n\r\nexport function calcDistribution(values, distributionSize) {\r\n\t// Assume non-negative values,\r\n\t// implying distribution minimum at zero\r\n\r\n\tlet dataMaxValue = Math.max(...values);\r\n\r\n\tlet distributionStep = 1 / (distributionSize - 1);\r\n\tlet distribution = [];\r\n\r\n\tfor(var i = 0; i < distributionSize; i++) {\r\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\r\n\t\tdistribution.push(checkpoint);\r\n\t}\r\n\r\n\treturn distribution;\r\n}\r\n\r\nexport function getMaxCheckpoint(value, distribution) {\r\n\treturn distribution.filter(d => d < value).length;\r\n}\r\n","import { fillArray } from '../utils/helpers';\r\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\r\n\r\nexport function dataPrep(data, type) {\r\n\tdata.labels = data.labels || [];\r\n\r\n\tlet datasetLength = data.labels.length;\r\n\r\n\t// Datasets\r\n\tlet datasets = data.datasets;\r\n\tlet zeroArray = new Array(datasetLength).fill(0);\r\n\tif(!datasets) {\r\n\t\t// default\r\n\t\tdatasets = [{\r\n\t\t\tvalues: zeroArray\r\n\t\t}];\r\n\t}\r\n\r\n\tdatasets.map(d=> {\r\n\t\t// Set values\r\n\t\tif(!d.values) {\r\n\t\t\td.values = zeroArray;\r\n\t\t} else {\r\n\t\t\t// Check for non values\r\n\t\t\tlet vals = d.values;\r\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\r\n\r\n\t\t\t// Trim or extend\r\n\t\t\tif(vals.length > datasetLength) {\r\n\t\t\t\tvals = vals.slice(0, datasetLength);\r\n\t\t\t} else {\r\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set labels\r\n\t\t//\r\n\r\n\t\t// Set type\r\n\t\tif(!d.chartType ) {\r\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\r\n\t\t\td.chartType = type;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// Markers\r\n\r\n\t// Regions\r\n\t// data.yRegions = data.yRegions || [];\r\n\tif(data.yRegions) {\r\n\t\tdata.yRegions.map(d => {\r\n\t\t\tif(d.end < d.start) {\r\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\nexport function zeroDataPrep(realData) {\r\n\tlet datasetLength = realData.labels.length;\r\n\tlet zeroArray = new Array(datasetLength).fill(0);\r\n\r\n\tlet zeroData = {\r\n\t\tlabels: realData.labels.slice(0, -1),\r\n\t\tdatasets: realData.datasets.map(d => {\r\n\t\t\treturn {\r\n\t\t\t\tname: '',\r\n\t\t\t\tvalues: zeroArray.slice(0, -1),\r\n\t\t\t\tchartType: d.chartType\r\n\t\t\t};\r\n\t\t}),\r\n\t};\r\n\r\n\tif(realData.yMarkers) {\r\n\t\tzeroData.yMarkers = [\r\n\t\t\t{\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tlabel: ''\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tif(realData.yRegions) {\r\n\t\tzeroData.yRegions = [\r\n\t\t\t{\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tend: 0,\r\n\t\t\t\tlabel: ''\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\treturn zeroData;\r\n}\r\n\r\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\r\n\tlet allowedSpace = chartWidth / labels.length;\r\n\tif(allowedSpace <= 0) allowedSpace = 1;\r\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\r\n\r\n\tlet calcLabels = labels.map((label, i) => {\r\n\t\tlabel += \"\";\r\n\t\tif(label.length > allowedLetters) {\r\n\r\n\t\t\tif(!isSeries) {\r\n\t\t\t\tif(allowedLetters-3 > 0) {\r\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet multiple = Math.ceil(label.length/allowedLetters);\r\n\t\t\t\tif(i % multiple !== 0) {\r\n\t\t\t\t\tlabel = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn label;\r\n\t});\r\n\r\n\treturn calcLabels;\r\n}\r\n","import '../css/charts.scss';\r\n\r\n// import MultiAxisChart from './charts/MultiAxisChart';\r\nimport PercentageChart from './charts/PercentageChart';\r\nimport PieChart from './charts/PieChart';\r\nimport Heatmap from './charts/Heatmap';\r\nimport AxisChart from './charts/AxisChart';\r\nimport DonutChart from './charts/DonutChart';\r\n\r\nconst chartTypes = {\r\n\tbar: AxisChart,\r\n\tline: AxisChart,\r\n\t// multiaxis: MultiAxisChart,\r\n\tpercentage: PercentageChart,\r\n\theatmap: Heatmap,\r\n\tpie: PieChart,\r\n\tdonut: DonutChart,\r\n};\r\n\r\nfunction getChartByType(chartType = 'line', parent, options) {\r\n\tif (chartType === 'axis-mixed') {\r\n\t\toptions.type = 'line';\r\n\t\treturn new AxisChart(parent, options);\r\n\t}\r\n\r\n\tif (!chartTypes[chartType]) {\r\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn new chartTypes[chartType](parent, options);\r\n}\r\n\r\nclass Chart {\r\n\tconstructor(parent, options) {\r\n\t\treturn getChartByType(options.type, parent, options);\r\n\t}\r\n}\r\n\r\nexport { Chart, PercentageChart, PieChart, Heatmap, AxisChart };","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { $ } from '../utils/dom';\r\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\r\n\r\nexport default class SvgTip {\r\n\tconstructor({\r\n\t\tparent = null,\r\n\t\tcolors = []\r\n\t}) {\r\n\t\tthis.parent = parent;\r\n\t\tthis.colors = colors;\r\n\t\tthis.titleName = '';\r\n\t\tthis.titleValue = '';\r\n\t\tthis.listValues = [];\r\n\t\tthis.titleValueFirst = 0;\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\tthis.top = 0;\r\n\t\tthis.left = 0;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetup() {\r\n\t\tthis.makeTooltip();\r\n\t}\r\n\r\n\trefresh() {\r\n\t\tthis.fill();\r\n\t\tthis.calcPosition();\r\n\t}\r\n\r\n\tmakeTooltip() {\r\n\t\tthis.container = $.create('div', {\r\n\t\t\tinside: this.parent,\r\n\t\t\tclassName: 'graph-svg-tip comparison',\r\n\t\t\tinnerHTML: `<span class=\"title\"></span>\r\n\t\t\t\t<ul class=\"data-point-list\"></ul>\r\n\t\t\t\t<div class=\"svg-pointer\"></div>`\r\n\t\t});\r\n\t\tthis.hideTip();\r\n\r\n\t\tthis.title = this.container.querySelector('.title');\r\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\r\n\r\n\t\tthis.parent.addEventListener('mouseleave', () => {\r\n\t\t\tthis.hideTip();\r\n\t\t});\r\n\t}\r\n\r\n\tfill() {\r\n\t\tlet title;\r\n\t\tif(this.index) {\r\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\r\n\t\t}\r\n\t\tif(this.titleValueFirst) {\r\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\r\n\t\t} else {\r\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\r\n\t\t}\r\n\t\tthis.title.innerHTML = title;\r\n\t\tthis.dataPointList.innerHTML = '';\r\n\r\n\t\tthis.listValues.map((set, i) => {\r\n\t\t\tconst color = this.colors[i] || 'black';\r\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\r\n\r\n\t\t\tlet li = $.create('li', {\r\n\t\t\t\tstyles: {\r\n\t\t\t\t\t'border-top': `3px solid ${color}`\r\n\t\t\t\t},\r\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\r\n\t\t\t\t\t${set.title ? set.title : '' }`\r\n\t\t\t});\r\n\r\n\t\t\tthis.dataPointList.appendChild(li);\r\n\t\t});\r\n\t}\r\n\r\n\tcalcPosition() {\r\n\t\tlet width = this.container.offsetWidth;\r\n\r\n\t\tthis.top = this.y - this.container.offsetHeight\r\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\r\n\t\tthis.left = this.x - width/2;\r\n\t\tlet maxLeft = this.parent.offsetWidth - width;\r\n\r\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\r\n\r\n\t\tif(this.left < 0) {\r\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\r\n\t\t\tthis.left = 0;\r\n\t\t} else if(this.left > maxLeft) {\r\n\t\t\tlet delta = this.left - maxLeft;\r\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\r\n\t\t\tpointer.style.left = pointerOffset;\r\n\r\n\t\t\tthis.left = maxLeft;\r\n\t\t} else {\r\n\t\t\tpointer.style.left = `50%`;\r\n\t\t}\r\n\t}\r\n\r\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\r\n\t\tthis.titleName = title.name;\r\n\t\tthis.titleValue = title.value;\r\n\t\tthis.listValues = listValues;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.titleValueFirst = title.valueFirst || 0;\r\n\t\tthis.index = index;\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\thideTip() {\r\n\t\tthis.container.style.top = '0px';\r\n\t\tthis.container.style.left = '0px';\r\n\t\tthis.container.style.opacity = '0';\r\n\t}\r\n\r\n\tshowTip() {\r\n\t\tthis.container.style.top = this.top + 'px';\r\n\t\tthis.container.style.left = this.left + 'px';\r\n\t\tthis.container.style.opacity = '1';\r\n\t}\r\n}\r\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\r\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\r\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\r\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\r\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT, DEFAULT_COLORS} from '../utils/constants';\r\nimport { getColor, isValidColor } from '../utils/colors';\r\nimport { runSMILAnimation } from '../utils/animation';\r\nimport { downloadFile, prepareForExport } from '../utils/export';\r\n\r\nexport default class BaseChart {\r\n\tconstructor(parent, options) {\r\n\r\n\t\tthis.parent = typeof parent === 'string'\r\n\t\t\t? document.querySelector(parent)\r\n\t\t\t: parent;\r\n\r\n\t\tif (!(this.parent instanceof HTMLElement)) {\r\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\r\n\t\t}\r\n\r\n\t\tthis.rawChartArgs = options;\r\n\r\n\t\tthis.title = options.title || '';\r\n\t\tthis.type = options.type || '';\r\n\r\n\t\tthis.realData = this.prepareData(options.data);\r\n\t\tthis.data = this.prepareFirstData(this.realData);\r\n\r\n\t\tthis.colors = this.validateColors(options.colors, this.type);\r\n\r\n\t\tthis.config = {\r\n\t\t\tshowTooltip: 1, // calculate\r\n            showLegend: 1, // calculate\r\n            //showLegend: options.hideLegend || 1, // calculate\r\n\t\t\tisNavigable: options.isNavigable || 0,\r\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\r\n\t\t\ttruncateLegends: options.truncateLegends || 0\r\n\t\t};\r\n\r\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\r\n\t\tlet m = this.measures;\r\n\t\tthis.setMeasures(options);\r\n\t\tif(!this.title.length) { m.titleHeight = 0; }\r\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\r\n\t\tthis.argHeight = options.height || m.baseHeight;\r\n\r\n\t\tthis.state = {};\r\n\t\tthis.options = {};\r\n\r\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\r\n\r\n\t\tif(this.config.isNavigable) {\r\n\t\t\tthis.overlays = [];\r\n\t\t}\r\n\r\n\t\tthis.configure(options);\r\n\t}\r\n\r\n\tprepareData(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprepareFirstData(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\tvalidateColors(colors, type) {\r\n\t\tconst validColors = [];\r\n\t\tcolors = (colors || []).concat(DEFAULT_COLORS[type]);\r\n\t\tcolors.forEach((string) => {\r\n\t\t\tconst color = getColor(string);\r\n\t\t\tif(!isValidColor(color)) {\r\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\r\n\t\t\t} else {\r\n\t\t\t\tvalidColors.push(color);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn validColors;\r\n\t}\r\n\r\n\tsetMeasures() {\r\n\t\t// Override measures, including those for title and legend\r\n\t\t// set config for legend and title\r\n\t}\r\n\r\n\tconfigure() {\r\n\t\tlet height = this.argHeight;\r\n\t\tthis.baseHeight = height;\r\n\t\tthis.height = height - getExtraHeight(this.measures);\r\n\r\n\t\t// Bind window events\r\n\t\tthis.boundDrawFn = () => this.draw(true);\r\n\t\twindow.addEventListener('resize', this.boundDrawFn);\r\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\r\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\r\n\t}\r\n\r\n\t// Has to be called manually\r\n\tsetup() {\r\n\t\tthis.makeContainer();\r\n\t\tthis.updateWidth();\r\n\t\tthis.makeTooltip();\r\n\r\n\t\tthis.draw(false, true);\r\n\t}\r\n\r\n\tmakeContainer() {\r\n\t\t// Chart needs a dedicated parent element\r\n\t\tthis.parent.innerHTML = '';\r\n\r\n\t\tlet args = {\r\n\t\t\tinside: this.parent,\r\n\t\t\tclassName: 'chart-container'\r\n\t\t};\r\n\r\n\t\tif(this.independentWidth) {\r\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\r\n\t\t}\r\n\r\n\t\tthis.container = $.create('div', args);\r\n\t}\r\n\r\n\tmakeTooltip() {\r\n\t\tthis.tip = new SvgTip({\r\n\t\t\tparent: this.container,\r\n\t\t\tcolors: this.colors\r\n\t\t});\r\n\t\tthis.bindTooltip();\r\n\t}\r\n\r\n\tbindTooltip() {}\r\n\r\n\tdraw(onlyWidthChange=false, init=false) {\r\n\t\tthis.updateWidth();\r\n\r\n\t\tthis.calc(onlyWidthChange);\r\n\t\tthis.makeChartArea();\r\n\t\tthis.setupComponents();\r\n\r\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\r\n\t\t// this.components.forEach(c => c.make());\r\n\t\tthis.render(this.components, false);\r\n\r\n\t\tif(init) {\r\n\t\t\tthis.data = this.realData;\r\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\r\n\t\t}\r\n\r\n\t\tthis.renderLegend();\r\n\r\n\t\tthis.setupNavigation(init);\r\n\t}\r\n\r\n\tcalc() {} // builds state\r\n\r\n\tupdateWidth() {\r\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\r\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\r\n\t}\r\n\r\n\tmakeChartArea() {\r\n\t\tif(this.svg) {\r\n\t\t\tthis.container.removeChild(this.svg);\r\n\t\t}\r\n\t\tlet m = this.measures;\r\n\r\n\t\tthis.svg = makeSVGContainer(\r\n\t\t\tthis.container,\r\n\t\t\t'frappe-chart chart',\r\n\t\t\tthis.baseWidth,\r\n\t\t\tthis.baseHeight\r\n\t\t);\r\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\r\n\r\n\t\tif(this.title.length) {\r\n\t\t\tthis.titleEL = makeText(\r\n\t\t\t\t'title',\r\n\t\t\t\tm.margins.left,\r\n\t\t\t\tm.margins.top,\r\n\t\t\t\tthis.title,\r\n\t\t\t\t{\r\n\t\t\t\t\tfontSize: m.titleFontSize,\r\n\t\t\t\t\tfill: '#666666',\r\n\t\t\t\t\tdy: m.titleFontSize\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet top = getTopOffset(m);\r\n\t\tthis.drawArea = makeSVGGroup(\r\n\t\t\tthis.type + '-chart chart-draw-area',\r\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\r\n\t\t);\r\n\r\n\t\tif(this.config.showLegend) {\r\n\t\t\ttop += this.height + m.paddings.bottom;\r\n\t\t\tthis.legendArea = makeSVGGroup(\r\n\t\t\t\t'chart-legend',\r\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\r\n\t\tthis.svg.appendChild(this.drawArea);\r\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\r\n\r\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\r\n\t}\r\n\r\n\tupdateTipOffset(x, y) {\r\n\t\tthis.tip.offset = {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t}\r\n\r\n\tsetupComponents() { this.components = new Map(); }\r\n\r\n\tupdate(data) {\r\n\t\tif(!data) {\r\n\t\t\tconsole.error('No data to update.');\r\n\t\t}\r\n\t\tthis.data = this.prepareData(data);\r\n\t\tthis.calc(); // builds state\r\n\t\tthis.render(this.components, this.config.animate);\r\n\t}\r\n\r\n\trender(components=this.components, animate=true) {\r\n\t\tif(this.config.isNavigable) {\r\n\t\t\t// Remove all existing overlays\r\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\r\n\t\t\t// ref.parentNode.insertBefore(element, ref);\r\n\t\t}\r\n\t\tlet elementsToAnimate = [];\r\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\r\n\t\tcomponents.forEach(c => {\r\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\r\n\t\t});\r\n\t\tif(elementsToAnimate.length > 0) {\r\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tcomponents.forEach(c => c.make());\r\n\t\t\t\tthis.updateNav();\r\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\r\n\t\t} else {\r\n\t\t\tcomponents.forEach(c => c.make());\r\n\t\t\tthis.updateNav();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNav() {\r\n\t\tif(this.config.isNavigable) {\r\n\t\t\tthis.makeOverlay();\r\n\t\t\tthis.bindUnits();\r\n\t\t}\r\n\t}\r\n\r\n\trenderLegend() {}\r\n\r\n\tsetupNavigation(init=false) {\r\n\t\tif(!this.config.isNavigable) return;\r\n\r\n\t\tif(init) {\r\n\t\t\tthis.bindOverlay();\r\n\r\n\t\t\tthis.keyActions = {\r\n\t\t\t\t'13': this.onEnterKey.bind(this),\r\n\t\t\t\t'37': this.onLeftArrow.bind(this),\r\n\t\t\t\t'38': this.onUpArrow.bind(this),\r\n\t\t\t\t'39': this.onRightArrow.bind(this),\r\n\t\t\t\t'40': this.onDownArrow.bind(this),\r\n\t\t\t};\r\n\r\n\t\t\tdocument.addEventListener('keydown', (e) => {\r\n\t\t\t\tif(isElementInViewport(this.container)) {\r\n\t\t\t\t\te = e || window.event;\r\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\r\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tmakeOverlay() {}\r\n\tupdateOverlay() {}\r\n\tbindOverlay() {}\r\n\tbindUnits() {}\r\n\r\n\tonLeftArrow() {}\r\n\tonRightArrow() {}\r\n\tonUpArrow() {}\r\n\tonDownArrow() {}\r\n\tonEnterKey() {}\r\n\r\n\taddDataPoint() {}\r\n\tremoveDataPoint() {}\r\n\r\n\tgetDataPoint() {}\r\n\tsetCurrentDataPoint() {}\r\n\r\n\tupdateDataset() {}\r\n\r\n\texport() {\r\n\t\tlet chartSvg = prepareForExport(this.svg);\r\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\r\n\t}\r\n}\r\n","import BaseChart from './BaseChart';\r\nimport { legendDot } from '../utils/draw';\r\nimport { getExtraWidth } from '../utils/constants';\r\n\r\nexport default class AggregationChart extends BaseChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t}\r\n\r\n\tconfigure(args) {\r\n\t\tsuper.configure(args);\r\n\r\n\t\tthis.config.maxSlices = args.maxSlices || 20;\r\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tlet s = this.state;\r\n\t\tlet maxSlices = this.config.maxSlices;\r\n\t\ts.sliceTotals = [];\r\n\r\n\t\tlet allTotals = this.data.labels.map((label, i) => {\r\n\t\t\tlet total = 0;\r\n\t\t\tthis.data.datasets.map(e => {\r\n\t\t\t\ttotal += e.values[i];\r\n\t\t\t});\r\n\t\t\treturn [total, label];\r\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\r\n\r\n\t\tlet totals = allTotals;\r\n\t\tif(allTotals.length > maxSlices) {\r\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\r\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\r\n\r\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\r\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\r\n\r\n\t\t\tlet sumOfRemaining = 0;\r\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\r\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\r\n\t\t\tthis.colors[maxSlices-1] = 'grey';\r\n\t\t}\r\n\r\n\t\ts.labels = [];\r\n\t\ttotals.map(d => {\r\n\t\t\ts.sliceTotals.push(d[0]);\r\n\t\t\ts.labels.push(d[1]);\r\n\t\t});\r\n\r\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\r\n\r\n\t\tthis.center = {\r\n\t\t\tx: this.width / 2,\r\n\t\t\ty: this.height / 2\r\n\t\t};\r\n\t}\r\n\r\n\trenderLegend() {\r\n\t\tlet s = this.state;\r\n\t\tthis.legendArea.textContent = '';\r\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\r\n\r\n\t\tlet count = 0;\r\n\t\tlet y = 0;\r\n\t\tthis.legendTotals.map((d, i) => {\r\n\t\t\tlet barWidth = 110;\r\n\t\t\tlet divisor = Math.floor(\r\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\r\n\t\t\t);\r\n\t\t\tif (this.legendTotals.length < divisor) {\r\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\r\n\t\t\t}\r\n\t\t\tif(count > divisor) {\r\n\t\t\t\tcount = 0;\r\n\t\t\t\ty += 20;\r\n\t\t\t}\r\n\t\t\tlet x = barWidth * count + 5;\r\n\t\t\tlet dot = legendDot(\r\n\t\t\t\tx,\r\n\t\t\t\ty,\r\n\t\t\t\t5,\r\n\t\t\t\tthis.colors[i],\r\n\t\t\t\t`${s.labels[i]}: ${d}`\r\n\t\t\t);\r\n\t\t\tthis.legendArea.appendChild(dot);\r\n\t\t\tcount++;\r\n\t\t});\r\n\t}\r\n}\r\n","import AggregationChart from './AggregationChart';\r\nimport { getOffset } from '../utils/dom';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\r\n\r\nexport default class PercentageChart extends AggregationChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t\tthis.type = 'percentage';\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetMeasures(options) {\r\n\t\tlet m = this.measures;\r\n\t\tthis.barOptions = options.barOptions || {};\r\n\r\n\t\tlet b = this.barOptions;\r\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\r\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\r\n\r\n\t\tm.paddings.right = 30;\r\n\t\tm.legendHeight = 60;\r\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'percentageBars',\r\n\t\t\t\t{\r\n\t\t\t\t\tbarHeight: this.barOptions.height,\r\n\t\t\t\t\tbarDepth: this.barOptions.depth,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\txPositions: s.xPositions,\r\n\t\t\t\t\t\twidths: s.widths,\r\n\t\t\t\t\t\tcolors: this.colors\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tsuper.calc();\r\n\t\tlet s = this.state;\r\n\r\n\t\ts.xPositions = [];\r\n\t\ts.widths = [];\r\n\r\n\t\tlet xPos = 0;\r\n\t\ts.sliceTotals.map((value) => {\r\n\t\t\tlet width = this.width * value / s.grandTotal;\r\n\t\t\ts.widths.push(width);\r\n\t\t\ts.xPositions.push(xPos);\r\n\t\t\txPos += width;\r\n\t\t});\r\n\t}\r\n\r\n\tmakeDataByIndex() { }\r\n\r\n\tbindTooltip() {\r\n\t\tlet s = this.state;\r\n\t\tthis.container.addEventListener('mousemove', (e) => {\r\n\t\t\tlet bars = this.components.get('percentageBars').store;\r\n\t\t\tlet bar = e.target;\r\n\t\t\tif(bars.includes(bar)) {\r\n\r\n\t\t\t\tlet i = bars.indexOf(bar);\r\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\r\n\r\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\r\n\t\t\t\tlet y = pOff.top - gOff.top;\r\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\r\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\r\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\r\n\r\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\r\n\t\t\t\tthis.tip.showTip();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import AggregationChart from './AggregationChart';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { getOffset } from '../utils/dom';\r\nimport { getPositionByAngle } from '../utils/helpers';\r\nimport { makeArcPathStr, makeCircleStr } from '../utils/draw';\r\nimport { lightenDarkenColor } from '../utils/colors';\r\nimport { transform } from '../utils/animation';\r\nimport { FULL_ANGLE } from '../utils/constants';\r\n\r\nexport default class PieChart extends AggregationChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t\tthis.type = 'pie';\r\n\t\tthis.initTimeout = 0;\r\n\t\tthis.init = 1;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tconfigure(args) {\r\n\t\tsuper.configure(args);\r\n\t\tthis.mouseMove = this.mouseMove.bind(this);\r\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\r\n\r\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\r\n\t\tthis.config.startAngle = args.startAngle || 0;\r\n\r\n\t\tthis.clockWise = args.clockWise || false;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tsuper.calc();\r\n\t\tlet s = this.state;\r\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\r\n\r\n\t\tconst { radius, clockWise } = this;\r\n\r\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\r\n\t\ts.sliceStrings = [];\r\n\t\ts.slicesProperties = [];\r\n\t\tlet curAngle = 180 - this.config.startAngle;\r\n\t\ts.sliceTotals.map((total, i) => {\r\n\t\t\tconst startAngle = curAngle;\r\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\r\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\r\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\r\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\r\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\r\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\r\n\r\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\r\n\r\n\t\t\tlet curStart,curEnd;\r\n\t\t\tif(this.init) {\r\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\r\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\r\n\t\t\t} else {\r\n\t\t\t\tcurStart = startPosition;\r\n\t\t\t\tcurEnd = endPosition;\r\n\t\t\t}\r\n\t\t\tconst curPath =\r\n\t\t\t\toriginDiffAngle === 360\r\n\t\t\t\t\t? makeCircleStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc)\r\n\t\t\t\t\t: makeArcPathStr(curStart, curEnd, this.center, this.radius, clockWise, largeArc);\r\n\r\n\t\t\ts.sliceStrings.push(curPath);\r\n\t\t\ts.slicesProperties.push({\r\n\t\t\t\tstartPosition,\r\n\t\t\t\tendPosition,\r\n\t\t\t\tvalue: total,\r\n\t\t\t\ttotal: s.grandTotal,\r\n\t\t\t\tstartAngle,\r\n\t\t\t\tendAngle,\r\n\t\t\t\tangle: diffAngle\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\tthis.init = 0;\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'pieSlices',\r\n\t\t\t\t{ },\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\r\n\t\t\t\t\t\tcolors: this.colors\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tcalTranslateByAngle(property){\r\n\t\tconst{radius,hoverRadio} = this;\r\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\r\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\r\n\t}\r\n\r\n\thoverSlice(path,i,flag,e){\r\n\t\tif(!path) return;\r\n\t\tconst color = this.colors[i];\r\n\t\tif(flag) {\r\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\r\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\r\n\t\t\tlet g_off = getOffset(this.svg);\r\n\t\t\tlet x = e.pageX - g_off.left + 10;\r\n\t\t\tlet y = e.pageY - g_off.top - 10;\r\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\r\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\r\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\r\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\r\n\t\t\tthis.tip.showTip();\r\n\t\t} else {\r\n\t\t\ttransform(path,'translate3d(0,0,0)');\r\n\t\t\tthis.tip.hideTip();\r\n\t\t\tpath.style.fill = color;\r\n\t\t}\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\r\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\r\n\t}\r\n\r\n\tmouseMove(e){\r\n\t\tconst target = e.target;\r\n\t\tlet slices = this.components.get('pieSlices').store;\r\n\t\tlet prevIndex = this.curActiveSliceIndex;\r\n\t\tlet prevAcitve = this.curActiveSlice;\r\n\t\tif(slices.includes(target)) {\r\n\t\t\tlet i = slices.indexOf(target);\r\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\r\n\t\t\tthis.curActiveSlice = target;\r\n\t\t\tthis.curActiveSliceIndex = i;\r\n\t\t\tthis.hoverSlice(target, i, true, e);\r\n\t\t} else {\r\n\t\t\tthis.mouseLeave();\r\n\t\t}\r\n\t}\r\n\r\n\tmouseLeave(){\r\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\r\n\t}\r\n}\r\n","import BaseChart from './BaseChart';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { makeText, heatSquare } from '../utils/draw';\r\nimport { DAY_NAMES_SHORT, addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\r\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\r\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\r\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\r\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\r\n\r\nconst COL_WIDTH = HEATMAP_SQUARE_SIZE + HEATMAP_GUTTER_SIZE;\r\nconst ROW_HEIGHT = COL_WIDTH;\r\n// const DAY_INCR = 1;\r\n\r\nexport default class Heatmap extends BaseChart {\r\n\tconstructor(parent, options) {\r\n\t\tsuper(parent, options);\r\n\t\tthis.type = 'heatmap';\r\n\r\n\t\tthis.countLabel = options.countLabel || '';\r\n\r\n\t\tlet validStarts = ['Sunday', 'Monday'];\r\n\t\tlet startSubDomain = validStarts.includes(options.startSubDomain)\r\n\t\t\t? options.startSubDomain : 'Sunday';\r\n\t\tthis.startSubDomainIndex = validStarts.indexOf(startSubDomain);\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetMeasures(options) {\r\n\t\tlet m = this.measures;\r\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\r\n\r\n\t\tm.paddings.top = ROW_HEIGHT * 3;\r\n\t\tm.paddings.bottom = 0;\r\n\t\tm.legendHeight = ROW_HEIGHT * 2;\r\n\t\tm.baseHeight = ROW_HEIGHT * NO_OF_DAYS_IN_WEEK\r\n\t\t\t+ getExtraHeight(m);\r\n\r\n\t\tlet d = this.data;\r\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\r\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\r\n\t\t\t+ spacing) * COL_WIDTH + getExtraWidth(m);\r\n\t}\r\n\r\n\tupdateWidth() {\r\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\r\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\r\n\t\tthis.baseWidth = (noOfWeeks + spacing) * COL_WIDTH\r\n\t\t\t+ getExtraWidth(this.measures);\r\n\t}\r\n\r\n\tprepareData(data=this.data) {\r\n\t\tif(data.start && data.end && data.start > data.end) {\r\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\r\n\t\t}\r\n\r\n\t\tif(!data.start) {\r\n\t\t\tdata.start = new Date();\r\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\r\n\t\t}\r\n\t\tif(!data.end) { data.end = new Date(); }\r\n\t\tdata.dataPoints = data.dataPoints || {};\r\n\r\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\r\n\t\t\tlet points = {};\r\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\r\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\r\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\r\n\t\t\t});\r\n\t\t\tdata.dataPoints = points;\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tlet s = this.state;\r\n\r\n\t\ts.start = clone(this.data.start);\r\n\t\ts.end = clone(this.data.end);\r\n\r\n\t\ts.firstWeekStart = clone(s.start);\r\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\r\n\t\ts.distribution = calcDistribution(\r\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\r\n\r\n\t\ts.domainConfigs = this.getDomains();\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\r\n\r\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\r\n\t\t\t'heatDomain',\r\n\t\t\t{\r\n\t\t\t\tindex: config.index,\r\n\t\t\t\tcolWidth: COL_WIDTH,\r\n\t\t\t\trowHeight: ROW_HEIGHT,\r\n\t\t\t\tsquareSize: HEATMAP_SQUARE_SIZE,\r\n\t\t\t\txTranslate: s.domainConfigs\r\n\t\t\t\t\t.filter((config, j) => j < i)\r\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\r\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\r\n\t\t\t\t\t* COL_WIDTH\r\n\t\t\t},\r\n\t\t\tfunction() {\r\n\t\t\t\treturn s.domainConfigs[i];\r\n\t\t\t}.bind(this)\r\n\r\n\t\t]);\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map((args, i) => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0] + '-' + i, component];\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tlet y = 0;\r\n\t\tDAY_NAMES_SHORT.forEach((dayName, i) => {\r\n\t\t\tif([1, 3, 5].includes(i)) {\r\n\t\t\t\tlet dayText = makeText('subdomain-name', -COL_WIDTH/2, y, dayName,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\r\n\t\t\t\t\t\tdy: 8,\r\n\t\t\t\t\t\ttextAnchor: 'end'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tthis.drawArea.appendChild(dayText);\r\n\t\t\t}\r\n\t\t\ty += ROW_HEIGHT;\r\n\t\t});\r\n\t}\r\n\r\n\tupdate(data) {\r\n\t\tif(!data) {\r\n\t\t\tconsole.error('No data to update.');\r\n\t\t}\r\n\r\n\t\tthis.data = this.prepareData(data);\r\n\t\tthis.draw();\r\n\t\tthis.bindTooltip();\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\tthis.container.addEventListener('mousemove', (e) => {\r\n\t\t\tthis.components.forEach(comp => {\r\n\t\t\t\tlet daySquares = comp.store;\r\n\t\t\t\tlet daySquare = e.target;\r\n\t\t\t\tif(daySquares.includes(daySquare)) {\r\n\r\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\r\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\r\n\r\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true);\r\n\r\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\r\n\r\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\r\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\r\n\t\t\t\t\tlet y = pOff.top - gOff.top;\r\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\r\n\t\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\r\n\r\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\r\n\t\t\t\t\tthis.tip.showTip();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trenderLegend() {\r\n\t\tthis.legendArea.textContent = '';\r\n\t\tlet x = 0;\r\n\t\tlet y = ROW_HEIGHT;\r\n\r\n\t\tlet lessText = makeText('subdomain-name', x, y, 'Less',\r\n\t\t\t{\r\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\r\n\t\t\t\tdy: 9\r\n\t\t\t}\r\n\t\t);\r\n\t\tx = (COL_WIDTH * 2) + COL_WIDTH/2;\r\n\t\tthis.legendArea.appendChild(lessText);\r\n\r\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\r\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (COL_WIDTH + 3) * i,\r\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, color);\r\n\t\t\tthis.legendArea.appendChild(square);\r\n\t\t});\r\n\r\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (COL_WIDTH + 3) + COL_WIDTH/4;\r\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, 'More',\r\n\t\t\t{\r\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\r\n\t\t\t\tdy: 9\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.legendArea.appendChild(moreText);\r\n\t}\r\n\r\n\tgetDomains() {\r\n\t\tlet s = this.state;\r\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\r\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\r\n\r\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\r\n\r\n\t\tlet domainConfigs = [];\r\n\r\n\t\tlet startOfMonth = clone(s.start);\r\n\t\tfor(var i = 0; i < noOfMonths; i++) {\r\n\t\t\tlet endDate = s.end;\r\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\r\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\r\n\t\t\t\tendDate = getLastDateInMonth(month, year);\r\n\t\t\t}\r\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\r\n\r\n\t\t\taddDays(endDate, 1);\r\n\t\t\tstartOfMonth = endDate;\r\n\t\t}\r\n\r\n\t\treturn domainConfigs;\r\n\t}\r\n\r\n\tgetDomainConfig(startDate, endDate='') {\r\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\r\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\r\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\r\n\r\n\t\tlet domainConfig = {\r\n\t\t\tindex: month,\r\n\t\t\tcols: []\r\n\t\t};\r\n\r\n\t\taddDays(endDate, 1);\r\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\r\n\r\n\t\tlet cols = [], col;\r\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\r\n\t\t\tcol = this.getCol(startOfWeek, month);\r\n\t\t\tcols.push(col);\r\n\r\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\r\n\t\t\taddDays(startOfWeek, 1);\r\n\t\t}\r\n\r\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\r\n\t\t\taddDays(startOfWeek, 1);\r\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\r\n\t\t}\r\n\r\n\t\tdomainConfig.cols = cols;\r\n\r\n\t\treturn domainConfig;\r\n\t}\r\n\r\n\tgetCol(startDate, month, empty = false) {\r\n\t\tlet s = this.state;\r\n\r\n\t\t// startDate is the start of week\r\n\t\tlet currentDate = clone(startDate);\r\n\t\tlet col = [];\r\n\r\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\r\n\t\t\tlet config = {};\r\n\r\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\r\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\r\n\r\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\r\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\r\n\t\t\t} else {\r\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\r\n\t\t\t}\r\n\t\t\tcol.push(config);\r\n\t\t}\r\n\r\n\t\treturn col;\r\n\t}\r\n\r\n\tgetSubDomainConfig(date) {\r\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\r\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\r\n\t\tlet config = {\r\n\t\t\tyyyyMmDd: yyyyMmDd,\r\n\t\t\tdataValue: dataValue || 0,\r\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\r\n\t\t};\r\n\t\treturn config;\r\n\t}\r\n}\r\n","import BaseChart from './BaseChart';\r\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\r\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { getOffset, fire } from '../utils/dom';\r\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\r\nimport { floatTwo } from '../utils/helpers';\r\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\r\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\r\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\r\n\r\nexport default class AxisChart extends BaseChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\r\n\t\tthis.barOptions = args.barOptions || {};\r\n\t\tthis.lineOptions = args.lineOptions || {};\r\n\r\n\t\tthis.type = args.type || 'line';\r\n\t\tthis.init = 1;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tsetMeasures() {\r\n\t\tif(this.data.datasets.length <= 1) {\r\n\t\t\tthis.config.showLegend = 0;\r\n\t\t\tthis.measures.paddings.bottom = 30;\r\n\t\t}\r\n\t}\r\n\r\n\tconfigure(options) {\r\n\t\tsuper.configure(options);\r\n\r\n\t\toptions.axisOptions = options.axisOptions || {};\r\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\r\n\r\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\r\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\r\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\r\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\r\n\r\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\r\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\r\n\r\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\r\n\t}\r\n\r\n\tprepareData(data=this.data) {\r\n\t\treturn dataPrep(data, this.type);\r\n\t}\r\n\r\n\tprepareFirstData(data=this.data) {\r\n\t\treturn zeroDataPrep(data);\r\n\t}\r\n\r\n\tcalc(onlyWidthChange = false) {\r\n\t\tthis.calcXPositions();\r\n\t\tif(!onlyWidthChange) {\r\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\r\n\t\t}\r\n\t\tthis.makeDataByIndex();\r\n\t}\r\n\r\n\tcalcXPositions() {\r\n\t\tlet s = this.state;\r\n\t\tlet labels = this.data.labels;\r\n\t\ts.datasetLength = labels.length;\r\n\r\n\t\ts.unitWidth = this.width/(s.datasetLength);\r\n\t\t// Default, as per bar, and mixed. Only line will be a special case\r\n\t\ts.xOffset = s.unitWidth/2;\r\n\r\n\t\t// // For a pure Line Chart\r\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\r\n\t\t// s.xOffset = 0;\r\n\r\n\t\ts.xAxis = {\r\n\t\t\tlabels: labels,\r\n\t\t\tpositions: labels.map((d, i) =>\r\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\r\n\t\t\t)\r\n\t\t};\r\n\t}\r\n\r\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\r\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\r\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\r\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\r\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\r\n\r\n\t\tthis.state.yAxis = {\r\n\t\t\tlabels: yPts,\r\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\r\n\t\t\tscaleMultiplier: scaleMultiplier,\r\n\t\t\tzeroLine: zeroLine,\r\n\t\t};\r\n\r\n\t\t// Dependent if above changes\r\n\t\tthis.calcDatasetPoints();\r\n\t\tthis.calcYExtremes();\r\n\t\tthis.calcYRegions();\r\n\t}\r\n\r\n\tcalcDatasetPoints() {\r\n\t\tlet s = this.state;\r\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\r\n\r\n\t\ts.datasets = this.data.datasets.map((d, i) => {\r\n\t\t\tlet values = d.values;\r\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\r\n\t\t\treturn {\r\n\t\t\t\tname: d.name,\r\n\t\t\t\tindex: i,\r\n\t\t\t\tchartType: d.chartType,\r\n\r\n\t\t\t\tvalues: values,\r\n\t\t\t\tyPositions: scaleAll(values),\r\n\r\n\t\t\t\tcumulativeYs: cumulativeYs,\r\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tcalcYExtremes() {\r\n\t\tlet s = this.state;\r\n\t\tif(this.barOptions.stacked) {\r\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\r\n\t\ts.datasets.map(d => {\r\n\t\t\td.yPositions.map((pos, j) => {\r\n\t\t\t\tif(pos < s.yExtremes[j]) {\r\n\t\t\t\t\ts.yExtremes[j] = pos;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tcalcYRegions() {\r\n\t\tlet s = this.state;\r\n\t\tif(this.data.yMarkers) {\r\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\r\n\t\t\t\td.position = scale(d.value, s.yAxis);\r\n\t\t\t\tif(!d.options) d.options = {};\r\n\t\t\t\t// if(!d.label.includes(':')) {\r\n\t\t\t\t// \td.label += ': ' + d.value;\r\n\t\t\t\t// }\r\n\t\t\t\treturn d;\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.data.yRegions) {\r\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\r\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\r\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\r\n\t\t\t\tif(!d.options) d.options = {};\r\n\t\t\t\treturn d;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetAllYValues() {\r\n\t\tlet key = 'values';\r\n\r\n\t\tif(this.barOptions.stacked) {\r\n\t\t\tkey = 'cumulativeYs';\r\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\r\n\t\t\tthis.data.datasets.map((d, i) => {\r\n\t\t\t\tlet values = this.data.datasets[i].values;\r\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\r\n\t\tif(this.data.yMarkers) {\r\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\r\n\t\t}\r\n\t\tif(this.data.yRegions) {\r\n\t\t\tthis.data.yRegions.map(d => {\r\n\t\t\t\tallValueLists.push([d.end, d.start]);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn [].concat(...allValueLists);\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'yAxis',\r\n\t\t\t\t{\r\n\t\t\t\t\tmode: this.config.yAxisMode,\r\n\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\r\n\t\t\t\t\t// pos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn this.state.yAxis;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t'xAxis',\r\n\t\t\t\t{\r\n\t\t\t\t\tmode: this.config.xAxisMode,\r\n\t\t\t\t\theight: this.height,\r\n\t\t\t\t\t// pos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tlet s = this.state;\r\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\r\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\r\n\r\n\t\t\t\t\treturn s.xAxis;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t'yRegions',\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\tpos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn this.state.yRegions;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t],\r\n\t\t];\r\n\r\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\r\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\r\n\r\n\t\tlet barsConfigs = barDatasets.map(d => {\r\n\t\t\tlet index = d.index;\r\n\t\t\treturn [\r\n\t\t\t\t'barGraph' + '-' + d.index,\r\n\t\t\t\t{\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tcolor: this.colors[index],\r\n\t\t\t\t\tstacked: this.barOptions.stacked,\r\n\r\n\t\t\t\t\t// same for all datasets\r\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\r\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tlet s = this.state;\r\n\t\t\t\t\tlet d = s.datasets[index];\r\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\r\n\r\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\r\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\r\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\r\n\r\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\r\n\t\t\t\t\tif(!stacked) {\r\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\r\n\t\t\t\t\tif(this.config.valuesOverPoints) {\r\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\r\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlabels = d.values;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\r\n\t\t\t\t\tif(stacked) {\r\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\txPositions: xPositions,\r\n\t\t\t\t\t\tyPositions: d.yPositions,\r\n\t\t\t\t\t\toffsets: offsets,\r\n\t\t\t\t\t\t// values: d.values,\r\n\t\t\t\t\t\tlabels: labels,\r\n\r\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\r\n\t\t\t\t\t\tbarsWidth: barsWidth,\r\n\t\t\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\tlet lineConfigs = lineDatasets.map(d => {\r\n\t\t\tlet index = d.index;\r\n\t\t\treturn [\r\n\t\t\t\t'lineGraph' + '-' + d.index,\r\n\t\t\t\t{\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tcolor: this.colors[index],\r\n\t\t\t\t\tsvgDefs: this.svgDefs,\r\n\t\t\t\t\theatline: this.lineOptions.heatline,\r\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\r\n\t\t\t\t\tspline: this.lineOptions.spline,\r\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\r\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\r\n\r\n\t\t\t\t\t// same for all datasets\r\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tlet s = this.state;\r\n\t\t\t\t\tlet d = s.datasets[index];\r\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\r\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\txPositions: s.xAxis.positions,\r\n\t\t\t\t\t\tyPositions: d.yPositions,\r\n\r\n\t\t\t\t\t\tvalues: d.values,\r\n\r\n\t\t\t\t\t\tzeroLine: minLine,\r\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t];\r\n\t\t});\r\n\r\n\t\tlet markerConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'yMarkers',\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: this.width,\r\n\t\t\t\t\tpos: 'right'\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn this.state.yMarkers;\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\r\n\r\n\t\tlet optionals = ['yMarkers', 'yRegions'];\r\n\t\tthis.dataUnitComponents = [];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\r\n\t\t\t\t\tthis.dataUnitComponents.push(component);\r\n\t\t\t\t}\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tmakeDataByIndex() {\r\n\t\tthis.dataByIndex = {};\r\n\r\n\t\tlet s = this.state;\r\n\t\tlet formatX = this.config.formatTooltipX;\r\n\t\tlet formatY = this.config.formatTooltipY;\r\n\t\tlet titles = s.xAxis.labels;\r\n\r\n\t\ttitles.map((label, index) => {\r\n\t\t\tlet values = this.state.datasets.map((set, i) => {\r\n\t\t\t\tlet value = set.values[index];\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: set.name,\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tyPos: set.yPositions[index],\r\n\t\t\t\t\tcolor: this.colors[i],\r\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.dataByIndex[index] = {\r\n\t\t\t\tlabel: label,\r\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\r\n\t\t\t\txPos: s.xAxis.positions[index],\r\n\t\t\t\tvalues: values,\r\n\t\t\t\tyExtreme: s.yExtremes[index],\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\r\n\t\tthis.container.addEventListener('mousemove', (e) => {\r\n\t\t\tlet m = this.measures;\r\n\t\t\tlet o = getOffset(this.container);\r\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\r\n\t\t\tlet relY = e.pageY - o.top;\r\n\r\n\t\t\tif(relY < this.height + getTopOffset(m)\r\n\t\t\t\t&& relY >  getTopOffset(m)) {\r\n\t\t\t\tthis.mapTooltipXPosition(relX);\r\n\t\t\t} else {\r\n\t\t\t\tthis.tip.hideTip();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tmapTooltipXPosition(relX) {\r\n\t\tlet s = this.state;\r\n\t\tif(!s.yExtremes) return;\r\n\r\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\r\n\t\tlet dbi = this.dataByIndex[index];\r\n\r\n\t\tthis.tip.setValues(\r\n\t\t\tdbi.xPos + this.tip.offset.x,\r\n\t\t\tdbi.yExtreme + this.tip.offset.y,\r\n\t\t\t{name: dbi.formattedLabel, value: ''},\r\n\t\t\tdbi.values,\r\n\t\t\tindex\r\n\t\t);\r\n\r\n\t\tthis.tip.showTip();\r\n\t}\r\n\r\n\trenderLegend() {\r\n\t\tlet s = this.data;\r\n\t\tif(s.datasets.length > 1) {\r\n\t\t\tthis.legendArea.textContent = '';\r\n\t\t\ts.datasets.map((d, i) => {\r\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\r\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\r\n\t\t\t\t// let multiplier = s.datasets.length - i;\r\n\t\t\t\tlet rect = legendBar(\r\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\r\n\t\t\t\t\tbarWidth * i,\r\n\t\t\t\t\t'0',\r\n\t\t\t\t\tbarWidth,\r\n\t\t\t\t\tthis.colors[i],\r\n\t\t\t\t\td.name,\r\n\t\t\t\t\tthis.config.truncateLegends);\r\n\t\t\t\tthis.legendArea.appendChild(rect);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t// Overlay\r\n\tmakeOverlay() {\r\n\t\tif(this.init) {\r\n\t\t\tthis.init = 0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this.overlayGuides) {\r\n\t\t\tthis.overlayGuides.forEach(g => {\r\n\t\t\t\tlet o = g.overlay;\r\n\t\t\t\to.parentNode.removeChild(o);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\r\n\t\t\treturn {\r\n\t\t\t\ttype: c.unitType,\r\n\t\t\t\toverlay: undefined,\r\n\t\t\t\tunits: c.units,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tif(this.state.currentIndex === undefined) {\r\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\r\n\t\t}\r\n\r\n\t\t// Render overlays\r\n\t\tthis.overlayGuides.map(d => {\r\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\r\n\r\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\r\n\t\t\tthis.drawArea.appendChild(d.overlay);\r\n\t\t});\r\n\t}\r\n\r\n\tupdateOverlayGuides() {\r\n\t\tif(this.overlayGuides) {\r\n\t\t\tthis.overlayGuides.forEach(g => {\r\n\t\t\t\tlet o = g.overlay;\r\n\t\t\t\to.parentNode.removeChild(o);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tbindOverlay() {\r\n\t\tthis.parent.addEventListener('data-select', () => {\r\n\t\t\tthis.updateOverlay();\r\n\t\t});\r\n\t}\r\n\r\n\tbindUnits() {\r\n\t\tthis.dataUnitComponents.map(c => {\r\n\t\t\tc.units.map(unit => {\r\n\t\t\t\tunit.addEventListener('click', () => {\r\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\r\n\t\t\t\t\tthis.setCurrentDataPoint(index);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\r\n\t\tthis.tip.container.addEventListener('click', () => {\r\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\r\n\t\t\tthis.setCurrentDataPoint(index);\r\n\t\t});\r\n\t}\r\n\r\n\tupdateOverlay() {\r\n\t\tthis.overlayGuides.map(d => {\r\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\r\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\r\n\t\t});\r\n\t}\r\n\r\n\tonLeftArrow() {\r\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\r\n\t}\r\n\r\n\tonRightArrow() {\r\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\r\n\t}\r\n\r\n\tgetDataPoint(index=this.state.currentIndex) {\r\n\t\tlet s = this.state;\r\n\t\tlet data_point = {\r\n\t\t\tindex: index,\r\n\t\t\tlabel: s.xAxis.labels[index],\r\n\t\t\tvalues: s.datasets.map(d => d.values[index])\r\n\t\t};\r\n\t\treturn data_point;\r\n\t}\r\n\r\n\tsetCurrentDataPoint(index) {\r\n\t\tlet s = this.state;\r\n\t\tindex = parseInt(index);\r\n\t\tif(index < 0) index = 0;\r\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\r\n\t\tif(index === s.currentIndex) return;\r\n\t\ts.currentIndex = index;\r\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\r\n\t}\r\n\r\n\r\n\r\n\t// API\r\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\r\n\t\tsuper.addDataPoint(label, datasetValues, index);\r\n\t\tthis.data.labels.splice(index, 0, label);\r\n\t\tthis.data.datasets.map((d, i) => {\r\n\t\t\td.values.splice(index, 0, datasetValues[i]);\r\n\t\t});\r\n\t\tthis.update(this.data);\r\n\t}\r\n\r\n\tremoveDataPoint(index = this.state.datasetLength-1) {\r\n\t\tif (this.data.labels.length <= 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsuper.removeDataPoint(index);\r\n\t\tthis.data.labels.splice(index, 1);\r\n\t\tthis.data.datasets.map(d => {\r\n\t\t\td.values.splice(index, 1);\r\n\t\t});\r\n\t\tthis.update(this.data);\r\n\t}\r\n\r\n\tupdateDataset(datasetValues, index=0) {\r\n\t\tthis.data.datasets[index].values = datasetValues;\r\n\t\tthis.update(this.data);\r\n\t}\r\n\t// addDataset(dataset, index) {}\r\n\t// removeDataset(index = 0) {}\r\n\r\n\tupdateDatasets(datasets) {\r\n\t\tthis.data.datasets.map((d, i) => {\r\n\t\t\tif(datasets[i]) {\r\n\t\t\t\td.values = datasets[i];\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.update(this.data);\r\n\t}\r\n\r\n\t// updateDataPoint(dataPoint, index = 0) {}\r\n\t// addDataPoint(dataPoint, index = 0) {}\r\n\t// removeDataPoint(index = 0) {}\r\n}\r\n","import AggregationChart from './AggregationChart';\r\nimport { getComponent } from '../objects/ChartComponents';\r\nimport { getOffset } from '../utils/dom';\r\nimport { getPositionByAngle } from '../utils/helpers';\r\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\r\nimport { lightenDarkenColor } from '../utils/colors';\r\nimport { transform } from '../utils/animation';\r\nimport { FULL_ANGLE } from '../utils/constants';\r\n\r\nexport default class DonutChart extends AggregationChart {\r\n\tconstructor(parent, args) {\r\n\t\tsuper(parent, args);\r\n\t\tthis.type = 'donut';\r\n\t\tthis.initTimeout = 0;\r\n\t\tthis.init = 1;\r\n\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tconfigure(args) {\r\n\t\tsuper.configure(args);\r\n\t\tthis.mouseMove = this.mouseMove.bind(this);\r\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\r\n\r\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\r\n\t\tthis.config.startAngle = args.startAngle || 0;\r\n\r\n\t\tthis.clockWise = args.clockWise || false;\r\n\t\tthis.strokeWidth = args.strokeWidth || 30;\r\n\t}\r\n\r\n\tcalc() {\r\n\t\tsuper.calc();\r\n\t\tlet s = this.state;\r\n\t\tthis.radius =\r\n\t\t\tthis.height > this.width\r\n\t\t\t\t? this.center.x - this.strokeWidth / 2\r\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\r\n\r\n\t\tconst { radius, clockWise } = this;\r\n\r\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\r\n\t\ts.sliceStrings = [];\r\n\t\ts.slicesProperties = [];\r\n\t\tlet curAngle = 180 - this.config.startAngle;\r\n\r\n\t\ts.sliceTotals.map((total, i) => {\r\n\t\t\tconst startAngle = curAngle;\r\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\r\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\r\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\r\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\r\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\r\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\r\n\r\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\r\n\r\n\t\t\tlet curStart,curEnd;\r\n\t\t\tif(this.init) {\r\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\r\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\r\n\t\t\t} else {\r\n\t\t\t\tcurStart = startPosition;\r\n\t\t\t\tcurEnd = endPosition;\r\n\t\t\t}\r\n\t\t\tconst curPath =\r\n\t\t\t\toriginDiffAngle === 360\r\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\r\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\r\n\r\n\t\t\ts.sliceStrings.push(curPath);\r\n\t\t\ts.slicesProperties.push({\r\n\t\t\t\tstartPosition,\r\n\t\t\t\tendPosition,\r\n\t\t\t\tvalue: total,\r\n\t\t\t\ttotal: s.grandTotal,\r\n\t\t\t\tstartAngle,\r\n\t\t\t\tendAngle,\r\n\t\t\t\tangle: diffAngle\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\tthis.init = 0;\r\n\t}\r\n\r\n\tsetupComponents() {\r\n\t\tlet s = this.state;\r\n\r\n\t\tlet componentConfigs = [\r\n\t\t\t[\r\n\t\t\t\t'donutSlices',\r\n\t\t\t\t{ },\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\r\n\t\t\t\t\t\tcolors: this.colors,\r\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\r\n\t\t\t\t\t};\r\n\t\t\t\t}.bind(this)\r\n\t\t\t]\r\n\t\t];\r\n\r\n\t\tthis.components = new Map(componentConfigs\r\n\t\t\t.map(args => {\r\n\t\t\t\tlet component = getComponent(...args);\r\n\t\t\t\treturn [args[0], component];\r\n\t\t\t}));\r\n\t}\r\n\r\n\tcalTranslateByAngle(property){\r\n\t\tconst{ radius, hoverRadio } = this;\r\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\r\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\r\n\t}\r\n\r\n\thoverSlice(path,i,flag,e){\r\n\t\tif(!path) return;\r\n\t\tconst color = this.colors[i];\r\n\t\tif(flag) {\r\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\r\n\t\t\tpath.style.stroke = lightenDarkenColor(color, 50);\r\n\t\t\tlet g_off = getOffset(this.svg);\r\n\t\t\tlet x = e.pageX - g_off.left + 10;\r\n\t\t\tlet y = e.pageY - g_off.top - 10;\r\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\r\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\r\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\r\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\r\n\t\t\tthis.tip.showTip();\r\n\t\t} else {\r\n\t\t\ttransform(path,'translate3d(0,0,0)');\r\n\t\t\tthis.tip.hideTip();\r\n\t\t\tpath.style.stroke = color;\r\n\t\t}\r\n\t}\r\n\r\n\tbindTooltip() {\r\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\r\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\r\n\t}\r\n\r\n\tmouseMove(e){\r\n\t\tconst target = e.target;\r\n\t\tlet slices = this.components.get('donutSlices').store;\r\n\t\tlet prevIndex = this.curActiveSliceIndex;\r\n\t\tlet prevAcitve = this.curActiveSlice;\r\n\t\tif(slices.includes(target)) {\r\n\t\t\tlet i = slices.indexOf(target);\r\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\r\n\t\t\tthis.curActiveSlice = target;\r\n\t\t\tthis.curActiveSliceIndex = i;\r\n\t\t\tthis.hoverSlice(target, i, true, e);\r\n\t\t} else {\r\n\t\t\tthis.mouseLeave();\r\n\t\t}\r\n\t}\r\n\r\n\tmouseLeave(){\r\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\r\n\t}\r\n}\r\n","import * as Charts from './chart';\r\n\r\nlet frappe     = { };\r\n\r\nfrappe.NAME    = 'Frappe Charts';\r\nfrappe.VERSION = '1.2.4';\r\n\r\nfrappe         = Object.assign({ }, frappe, Charts);\r\n\r\nexport default frappe;"],"names":["expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","Number","isNaN","p","floor","log10","l","shortened","pow","round","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","limitColor","r","lightenDarkenColor","color","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","$","createSVG","tag","createElementNS","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","undefined","args","inside","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeCircleStr","midArc","makeArcStrokePathStr","makeStrokeCircleStr","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","key","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","shortenNumbers","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","createSplineCurve","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","createElement","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","firstChild","container","innerHTML","treatAsUtc","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getTime","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","isFinite","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","getChartByType","AxisChart","chartTypes","error","css","insertAt","head","getElementsByTagName","styleSheet","cssText","createTextNode","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","DEFAULT_CHART_COLORS","DEFAULT_COLORS","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","PRESET_COLOR_MAP","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","validateColors","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","validColors","forEach","warn","boundDrawFn","_this","draw","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","c","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","DAY_NAMES_SHORT","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","newOptions","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","countLabel","validStarts","startSubDomain","startSubDomainIndex","discreteDomains","ROW_HEIGHT","HEATMAP_SQUARE_SIZE","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","COL_WIDTH","moreText","HEATMAP_DISTRIBUTION_SIZE","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","relY","mapTooltipXPosition","dbi","yExtreme","formattedLabel","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","Chart","frappe","NAME","VERSION","Charts"],"mappings":"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"}